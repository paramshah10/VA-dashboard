{"version":3,"sources":["assets/img/icons/common/facebook.svg","assets/img/icons/common/google.svg","lib/firebase.js","assets/img/theme/profile_background.jpeg","assets/img/theme/warrior_wellness.png","components/Navbars/AdminNavbar.js","components/Sidebar/Sidebar.js","components/Headers/Header.js","variables/charts_data.js","lib/redux/actions/charts.js","views/graphs.js","views/Index.js","lib/redux/actions/app.js","components/Headers/UserHeader.js","views/examples/Profile.js","views/examples/Register.js","views/examples/Login.js","views/examples/Charts_page.js","routes.js","layouts/Admin.js","layouts/Auth.js","lib/redux/reducers/charts.js","lib/redux/reducers/app.js","lib/redux/reducers/index.js","index.js","variables/charts.js","assets/img/theme/team-4-800x800.jpg"],"names":["module","exports","Config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","AdminNavbar","localStorage","setItem","firebase","signOut","Navbar","className","expand","id","Container","fluid","this","props","brandText","Nav","navbar","UncontrolledDropdown","nav","DropdownToggle","Media","alt","src","require","DropdownMenu","right","DropdownItem","header","tag","to","Link","divider","onClick","e","tryLogOut","React","Component","Sidebar","state","collapseOpen","toggleCollapse","setState","closeCollapse","createLinks","routes","map","prop","key","name","NavItem","NavLink","layout","path","NavLinkRRD","activeClassName","icon","activeRoute","bind","routeName","location","pathname","indexOf","navbarBrandProps","bgColor","logo","innerLink","outterLink","href","target","type","NavbarBrand","imgAlt","imgSrc","preventDefault","window","Collapse","isOpen","Row","Col","xs","defaultProps","Header","lg","xl","Card","CardBody","CardTitle","overalls","connect","fetchedInitial","charts","fetchedChartsData","colors","100","200","300","400","500","600","700","800","900","config","initializeApp","default","db","firestore","global_data","chartExample1","options","scales","yAxes","gridLines","color","zeroLineColor","ticks","callback","value","tooltips","callbacks","label","item","data","datasets","datasetIndex","yLabel","content","length","data1","canvas","labels","data2","data3","chartExample2","stacked","xAxes","maxBarThickness","backgroundColor","chartExample3","legend","display","position","usePointStyle","padding","index","substring","search","responsive","maintainAspectRatio","innerWidth","chartExample4","chartExample5","chartExample6","chartExample7","chartExample8","activity_pie","step_counts","ChartsData","getChartData","a","uid","getItem","docRef","collection","doc","get","docs","addOveralls","dispatch","Graphs","toggleNavs","row","col","activeNav1","chartExample1Data","activeNav2","chartExample2Data","activeNav5","chartExample5Data","activeNav6","chartExample6Data","activeNav3","chartExample3Data","activeNav4","chartExample4Data","Chart","parseOptions","chartOptions","Spinner","style","width","height","size","CardHeader","pills","classnames","active","data-toggle","getDatasetAtEvent","console","log","Index","stressIncidents","dateSort","stressSort","showTextBox","Array","fill","orderBy","onSnapshot","d","then","addUserData","sort","b","date","split","stress_score","Table","scope","Button","scopr","onStressToggle","onDateToggle","incident","String","Input","defaultValue","reason","onChange","stress","time","description","plaintext","onDoubleClick","UncontrolledTooltip","delay","placement","trigger","forceUpdate","userData","UserHeader","minHeight","backgroundImage","backgroundSize","backgroundPosition","md","Profile","Form","FormGroup","htmlFor","placeholder","rows","Register","invalid_credentials","account_created","first_name","last_name","email","password","showSpinner","email_already_in_use","tryGoogleSignIn","authListener","scrollTo","onAuthStateChanged","user","onAuthHandler","createUserWithEmailAndPassword","Axios","post","firstName","lastName","response","code","message","catch","error","provider","GoogleAuthProvider","signInWithPopup","result","token","credential","accessToken","errorCode","errorMessage","FacebookAuthProvider","displayName","signInWithEmailAndPassword","push","Modal","opacity","tryFacebookSignIn","boxShadow","tryLogInUser","Alert","role","InputGroup","InputGroupAddon","addonType","InputGroupText","autoComplete","tryCreateAccount","Login","loggedIn","Charts","component","Admin","getRoutes","getBrandText","i","isLoggedIn","document","documentElement","scrollTop","scrollingElement","refs","mainContent","ref","from","Auth","modalOpen","body","classList","add","remove","xmlns","preserveAspectRatio","version","viewBox","x","y","points","initialState","chartsReducer","action","Object","assign","UID","appReducer","allReducers","combineReducers","app","store","createStore","allReducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","getElementById","elements","Rectangle","prototype","draw","left","top","bottom","signX","signY","borderSkipped","ctx","_chart","vm","_view","borderWidth","horizontal","base","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","cornerAt","corner","moveTo","nextCornerId","radius","lineTo","quadraticCurveTo","stroke","fonts","primary","secondary","info","success","danger","warning","defaults","global","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","point","line","tension","borderCapStyle","rectangle","arc","enabled","mode","intersect","doughnut","cutoutPercentage","legendCallback","chart","forEach","scaleService","updateScaleDefaults","borderDash","borderDashOffset","drawBorder","drawTicks","zeroLineWidth","zeroLineBorderDash","zeroLineBorderDashOffset","beginAtZero","drawOnChartArea","parent"],"mappings":"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","file":"static/js/main.8bed0895.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/facebook.a64a1d0a.svg\";","module.exports = __webpack_public_path__ + \"static/media/google.87be59a1.svg\";","const Config = {\r\n    apiKey: \"AIzaSyBDlLqLVi5RohP9icH762-KnXovwVfrtDE\",\r\n    authDomain: \"veterans-affairs-78bd2.firebaseapp.com\",\r\n    databaseURL: \"https://veterans-affairs-78bd2.firebaseio.com\",\r\n    projectId: \"veterans-affairs-78bd2\",\r\n    storageBucket: \"veterans-affairs-78bd2.appspot.com\",\r\n    messagingSenderId: \"206326879131\",\r\n    appId: \"1:206326879131:web:828dd33f6144f3d7f8473e\",\r\n    measurementId: \"G-8LHPYJVH5J\"\r\n};\r\n\r\nexport default Config;","module.exports = __webpack_public_path__ + \"static/media/profile_background.cdbbf803.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/warrior_wellness.72198801.png\";","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// reactstrap components\r\nimport {\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  Navbar,\r\n  Nav,\r\n  Container,\r\n  Media\r\n} from \"reactstrap\";\r\n\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nclass AdminNavbar extends React.Component {\r\n  tryLogOut() {\r\n    localStorage.setItem('loggedIn', false)\r\n    firebase.auth().signOut();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Navbar className=\"navbar-top navbar-dark\" expand=\"md\" id=\"navbar-main\">\r\n          <Container fluid>\r\n            <span\r\n              className=\"h4 mb-0 text-white text-uppercase d-none d-lg-inline-block\"\r\n            >\r\n              {this.props.brandText}\r\n            </span>\r\n            <Nav className=\"align-items-center d-none d-md-flex\" navbar>\r\n              <UncontrolledDropdown nav>\r\n                <DropdownToggle className=\"pr-0\" nav>\r\n                  <Media className=\"align-items-center\">\r\n                    <span className=\"avatar avatar-sm rounded-circle\">\r\n                      <img\r\n                        alt=\"...\"\r\n                        src={require(\"assets/img/theme/team-4-800x800.jpg\")}\r\n                      />\r\n                    </span>\r\n                    <Media className=\"ml-2 d-none d-lg-block\">\r\n                      <span className=\"mb-0 text-sm font-weight-bold\">\r\n                        John Doe\r\n                      </span>\r\n                    </Media>\r\n                  </Media>\r\n                </DropdownToggle>\r\n                <DropdownMenu className=\"dropdown-menu-arrow\" right>\r\n                  <DropdownItem className=\"noti-title\" header tag=\"div\">\r\n                    <h6 className=\"text-overflow m-0\">Welcome!</h6>\r\n                  </DropdownItem>\r\n                  <DropdownItem to=\"/admin/user-profile\" tag={Link}>\r\n                    <i className=\"ni ni-single-02\" />\r\n                    <span>My profile</span>\r\n                  </DropdownItem>\r\n                  <DropdownItem to=\"/admin/user-profile\" tag={Link}>\r\n                    <i className=\"ni ni-settings-gear-65\" />\r\n                    <span>Settings</span>\r\n                  </DropdownItem>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem to=\"/auth/login\" tag={Link} onClick={(e) => this.tryLogOut()}>\r\n                    <i className=\"ni ni-user-run\" />\r\n                    <span>Logout</span>\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </Nav>\r\n          </Container>\r\n        </Navbar>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminNavbar;\r\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// reactstrap components\nimport {\n  Collapse,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Media,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass Sidebar extends React.Component {\n  state = {\n    collapseOpen: false\n  };\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  // toggles collapse between opened and closed (true/false)\n  toggleCollapse = () => {\n    this.setState({\n      collapseOpen: !this.state.collapseOpen\n    });\n  };\n  // closes the collapse\n  closeCollapse = () => {\n    this.setState({\n      collapseOpen: false\n    });\n  };\n  // creates the links that appear in the left menu / Sidebar\n  createLinks = routes => {\n    return routes.map((prop, key) => {\n      if (prop.name != \"Login\" && prop.name != \"Register\"){     //don't want to create a sidebar link to login and register (can't delete from routes.js so this)\n        return (\n          <NavItem key={key}>\n            <NavLink\n              to={prop.layout + prop.path}\n              tag={NavLinkRRD}\n              onClick={this.closeCollapse}\n              activeClassName=\"active\"\n            >\n              <i className={prop.icon} />\n              {prop.name}\n            </NavLink>\n          </NavItem>\n        );\n      }\n    });\n  };\n  render() {\n    const { bgColor, routes, logo } = this.props;\n    let navbarBrandProps;\n    if (logo && logo.innerLink) {\n      navbarBrandProps = {\n        to: logo.innerLink,\n        tag: Link\n      };\n    } else if (logo && logo.outterLink) {\n      navbarBrandProps = {\n        href: logo.outterLink,\n        target: \"_blank\"\n      };\n    }\n    return (\n      <Navbar\n        className=\"navbar-vertical fixed-left navbar-light bg-white\"\n        expand=\"md\"\n        id=\"sidenav-main\"\n      >\n        <Container fluid>\n          {/* Toggler */}\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            onClick={this.toggleCollapse}\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {/* Brand */}\n          {logo ? (\n            <NavbarBrand className=\"pt-1\" {...navbarBrandProps}>\n              <img\n                alt={logo.imgAlt}\n                className=\"navbar-brand-img\"\n                src={logo.imgSrc}\n              />\n            </NavbarBrand>\n          ) : null}\n          {/* User */}\n          <Nav className=\"align-items-center d-md-none\">\n            <UncontrolledDropdown nav>\n              <DropdownToggle nav>\n                <Media className=\"align-items-center\">\n                  <span className=\"avatar avatar-sm rounded-circle\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                    />\n                  </span>\n                </Media>\n              </DropdownToggle>\n              <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                <DropdownItem className=\"noti-title\" header tag=\"div\">\n                  <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-single-02\" />\n                  <span>My profile</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-settings-gear-65\" />\n                  <span>Settings</span>\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem to=\"/auth/login\" tag={Link} onClick={e => {e.preventDefault(); window.location.href = \"/auth/login\"}}>\n                  <i className=\"ni ni-user-run\" />\n                  <span>Logout</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n          {/* Collapse */}\n          <Collapse navbar isOpen={this.state.collapseOpen}>\n            {/* Collapse header */}\n            <div className=\"navbar-collapse-header d-md-none\">\n              <Row>\n                {logo ? (\n                  <Col className=\"collapse-brand\" xs=\"6\">\n                    {logo.innerLink ? (\n                      <Link to={logo.innerLink}>\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\n                      </Link>\n                    ) : (\n                      <a href={logo.outterLink}>\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\n                      </a>\n                    )}\n                  </Col>\n                ) : null}\n                <Col className=\"collapse-close\" xs=\"6\">\n                  <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    onClick={this.toggleCollapse}\n                  >\n                    <span />\n                    <span />\n                  </button>\n                </Col>\n              </Row>\n            </div>\n            {/* Navigation */}\n            <Nav navbar>{this.createLinks(routes)}</Nav>\n            {/* Divider */}\n            <hr className=\"my-3\" />\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  routes: [{}]\n};\n\nSidebar.propTypes = {\n  // links that will be displayed inside the component\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the image src of the logo\n    imgSrc: PropTypes.string.isRequired,\n    // the alt for the img\n    imgAlt: PropTypes.string.isRequired\n  })\n};\n\nexport default Sidebar;\n","import React from \"react\";\n\n// reactstrap components\nimport { Card, CardBody, CardTitle, Container, Row, Col } from \"reactstrap\";\n\nimport {connect} from 'react-redux'\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n          <Container fluid>\n            <div className=\"header-body\">\n              {/* Card stats */}\n              <Row>\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Stress Score\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            {this.props.overalls[\"stress\"] && this.props.overalls[\"stress\"][\"score\"]}\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                            <i className=\"fas fa-chart-bar\" />\n                          </div>\n                        </Col>\n                      </Row>\n                      <p className=\"mt-3 mb-0 text-muted text-sm\">\n                        {this.props.overalls[\"stress\"] && this.props.overalls[\"stress\"][\"value_change\"] === \"up\" ?\n                          (<span className=\"text-danger mr-2\">\n                            <i className=\"fa fa-arrow-up\" /> {this.props.overalls[\"stress\"][\"percent_change\"]}%\n                          </span>) \n                          : \n                          (<span className=\"text-success mr-2\">\n                            <i className=\"fa fa-arrow-down\" /> {this.props.overalls[\"stress\"] && this.props.overalls[\"stress\"][\"percent_change\"]}%\n                          </span>)\n                          }{\" \"}\n                        <span className=\"text-nowrap\">Since last week</span>\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Sleep\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            {this.props.overalls[\"sleep\"] && this.props.overalls[\"sleep\"][\"score\"] } hours/night\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-warning text-white rounded-circle shadow\">\n                            <i className=\"fas fa-chart-pie\" />\n                          </div>\n                        </Col>\n                      </Row>\n                      <p className=\"mt-3 mb-0 text-muted text-sm\">\n                        {this.props.overalls[\"sleep\"] && this.props.overalls[\"sleep\"][\"value_change\"] === \"up\" ?\n                          (<span className=\"text-success mr-2\">\n                            <i className=\"fa fa-arrow-up\" /> {this.props.overalls[\"sleep\"][\"percent_change\"]}%\n                          </span>) \n                          : \n                          (<span className=\"text-danger mr-2\">\n                            <i className=\"fa fa-arrow-down\" /> {this.props.overalls[\"sleep\"] && this.props.overalls[\"sleep\"][\"percent_change\"]}%\n                          </span>)\n                          }{\" \"}\n                        <span className=\"text-nowrap\">Since last week</span>\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Stress Management\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            {this.props.overalls[\"stress_management\"] && this.props.overalls[\"stress_management\"][\"score\"]} mins/day\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-yellow text-white rounded-circle shadow\">\n                            <i className=\"fas fa-users\" />\n                          </div>\n                        </Col>\n                      </Row>\n                      <p className=\"mt-3 mb-0 text-muted text-sm\">\n                        {this.props.overalls[\"stress_management\"] && this.props.overalls[\"stress_management\"][\"value_change\"] === \"up\" ?\n                          (<span className=\"text-success mr-2\">\n                            <i className=\"fa fa-arrow-up\" /> {this.props.overalls[\"stress_management\"][\"percent_change\"]}%\n                          </span>) \n                          : \n                          (<span className=\"text-danger mr-2\">\n                            <i className=\"fa fa-arrow-down\" /> {this.props.overalls[\"stress_management\"] && this.props.overalls[\"stress_management\"][\"percent_change\"]}%\n                          </span>)\n                          }{\" \"}\n                        <span className=\"text-nowrap\">Since last week</span>\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            High-Stress Events\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            {this.props.overalls[\"stress_events\"] && this.props.overalls[\"stress_events\"][\"score\"]}\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-info text-white rounded-circle shadow\">\n                            <i className=\"fas fa-percent\" />\n                          </div>\n                        </Col>\n                      </Row>\n                      <p className=\"mt-3 mb-0 text-muted text-sm\">\n                        {this.props.overalls[\"stress_events\"] && this.props.overalls[\"stress_events\"][\"value_change\"] === \"up\" ?\n                          (<span className=\"text-danger mr-2\">\n                            <i className=\"fa fa-arrow-up\" /> {this.props.overalls[\"stress_events\"][\"percent_change\"]}%\n                          </span>) \n                          : \n                          (<span className=\"text-success mr-2\">\n                            <i className=\"fa fa-arrow-down\" /> {this.props.overalls[\"stress_events\"] && this.props.overalls[\"stress_events\"][\"percent_change\"]}%\n                          </span>)\n                          }{\" \"}\n                        <span className=\"text-nowrap\">Since last month</span>\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            </div>\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    fetchedInitial: state.charts.fetchedChartsData,\n    overalls: state.charts.overalls\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n)(Header)","import { fetchedChartsData, addOveralls } from 'lib/redux/actions/charts';\r\nimport React from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\n// Colors\r\nvar colors = {\r\n    gray: {\r\n        100: \"#f6f9fc\",\r\n        200: \"#e9ecef\",\r\n        300: \"#dee2e6\",\r\n        400: \"#ced4da\",\r\n        500: \"#adb5bd\",\r\n        600: \"#8898aa\",\r\n        700: \"#525f7f\",\r\n        800: \"#32325d\",\r\n        900: \"#212529\"\r\n    },\r\n    theme: {\r\n        default: \"#172b4d\",\r\n        primary: \"#5e72e4\",\r\n        secondary: \"#f4f5f7\",\r\n        info: \"#11cdef\",\r\n        success: \"#2dce89\",\r\n        danger: \"#f5365c\",\r\n        warning: \"#fb6340\"\r\n    },\r\n    black: \"#12263F\",\r\n    white: \"#FFFFFF\",\r\n    transparent: \"transparent\"\r\n};\r\n\r\nconst config = require('../lib/firebase');\r\n\r\nconst firebase = require(\"firebase/app\");\r\nrequire(\"firebase/firestore\");\r\n\r\nfirebase.initializeApp(config.default);\r\nlet db = firebase.firestore();\r\n\r\nlet global_data = {\r\n  \"stress_bar\": {\r\n    \"day\": [],\r\n    \"week\": [],\r\n    \"month\": []\r\n  },\r\n  \"step_counts\": {\r\n    \"week\": [],\r\n    \"month\": []\r\n  },\r\n  \"activity_pie\": {\r\n    \"day\": [],\r\n    \"week\": []\r\n  },\r\n  \"sleep\": {\r\n    \"week\": {\r\n      \"total\": [],\r\n      \"awake\": [],\r\n      \"light\": [],\r\n      \"deep\": [],\r\n    },\r\n    \"month\": {\r\n      \"total\": [],\r\n      \"awake\": [],\r\n      \"light\": [],\r\n      \"deep\": [],\r\n    }\r\n  },\r\n  \"stress_pie_score\": {\r\n    \"week\": [],\r\n    \"month\": [],\r\n  },\r\n  \"stress_pie_type\": {\r\n    \"week\": [],\r\n    \"month\": [],\r\n  },\r\n  \"stress_bar_score\": {\r\n    \"week\": [],\r\n    \"month\": [],\r\n  },\r\n  \"stress_bar_type\": {\r\n    \"week\": [],\r\n    \"month\": [],\r\n  },\r\n  \"stress_management\": {\r\n    \"week\": [],\r\n    \"month\": []\r\n  }\r\n}\r\n\r\n// Example 1 of Chart inside src/views/Index.js (Sales value - Card)\r\nlet chartExample1 = {\r\n    options: {\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            gridLines: {\r\n              color: colors.gray[900],\r\n              zeroLineColor: colors.gray[900]\r\n            },\r\n            ticks: {\r\n              callback: function(value) {\r\n                if (!(value % 5)) {\r\n                  return value;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      tooltips: {\r\n        callbacks: {\r\n          label: function(item, data) {\r\n            var label = data.datasets[item.datasetIndex].label || \"\";\r\n            var yLabel = item.yLabel;\r\n            var content = \"\";\r\n  \r\n            if (data.datasets.length > 1) {\r\n              content += label;\r\n            }\r\n  \r\n            // content += '$' + yLabel + 'k';\r\n            content += yLabel;\r\n            return content;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    data1: canvas => {//Stress score by day\r\n      return {\r\n        labels: [\"12am\", \"3am\", \"6am\", \"9am\", \"12am\", \"3pm\", \"6pm\", \"9pm\", \"12am\"],\r\n        datasets: [\r\n          {\r\n            label: \"Stress Score by Day\",\r\n            data: global_data[\"stress_bar\"][\"day\"] //[3, 0, 0, 3, 12, 22, 14, 10, 4]\r\n          }\r\n        ]\r\n      };\r\n    },\r\n    data2: canvas => {//Stress score by week\r\n      return {\r\n        labels: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\r\n        datasets: [\r\n          {\r\n            label: \"Stress Score by Week\",\r\n            data: global_data[\"stress_bar\"][\"week\"]//[20, 18, 15, 20, 21, 24, 19]\r\n          }\r\n        ]\r\n      };\r\n    },\r\n    data3: canvas => {//Stress score by month\r\n      return {\r\n        labels: [\"1st\", \"2nd\", \"4th\", \"6th\", \"8th\", \"10th\", \"12th\", \"14th\", \"16th\", \"18th\", \"20th\", \"22nd\", \"24th\", \"26th\", \"28th\", \"30th\"],\r\n        datasets: [\r\n          {\r\n            label: \"Stress Score by Month\",\r\n            data: global_data[\"stress_bar\"][\"month\"]//[10, 16, 18, 15, 20, 21, 24, 19, 13, 14, 11, 20, 21, 24, 19, 13]\r\n          }\r\n        ]\r\n      };\r\n    }\r\n};\r\n  \r\n  // Example 2 of Chart inside src/views/Index.js (Total orders - Card)\r\nlet chartExample2 = {\r\noptions: {\r\n    scales: {\r\n    yAxes: [\r\n        {\r\n        ticks: {\r\n            callback: function(value) {\r\n            if (!(value % 2)) {\r\n                //return '$' + value + 'k'\r\n                return value;\r\n            }\r\n            }\r\n        },\r\n        stacked: true,\r\n        }\r\n    ],\r\n    xAxes: [{\r\n      stacked: true,\r\n    }]\r\n    },\r\n    tooltips: {\r\n        callbacks: {\r\n            label: function(item, data) {\r\n            var label = data.datasets[item.datasetIndex].label || \"\";\r\n            var yLabel = item.yLabel;\r\n            var content = \"\";\r\n            if (data.datasets.length > 1) {\r\n                content += label;\r\n            }\r\n            content += \" \" + yLabel;\r\n            return content;\r\n            }\r\n    }\r\n    }\r\n},\r\ndata1: canvas => {//Sleep by week\r\n    return {\r\n    labels: [\"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\", \"Sun\"],\r\n    datasets: [\r\n        {\r\n          label: \"Awake\",\r\n          data: global_data[\"sleep\"][\"week\"][\"awake\"], //[0.2, 0.7, 0.5, 0.3, 0.9, 0.2, 0.3],\r\n          maxBarThickness: 10,\r\n          backgroundColor: \"#A91E2A\"\r\n        },\r\n        {\r\n          label: \"Light Sleep\",\r\n          data: global_data[\"sleep\"][\"week\"][\"light\"], //[2.2, 2, 2.5, 2.3, 2.9, 2.2, 2.3],\r\n          maxBarThickness: 10,\r\n          backgroundColor: '#FEB300', //\"#673AB7\",\r\n        },\r\n        {\r\n          label: \"Deep Sleep\",\r\n          data: global_data[\"sleep\"][\"week\"][\"deep\"],//[4.2, 4, 4.5, 4.3, 4.1, 4.2, 4.3],\r\n          maxBarThickness: 10,\r\n          backgroundColor: \"#0dd406\",\r\n        },\r\n    ]\r\n    };\r\n},\r\ndata2: canvas => { //sleep by month\r\n    return {  \r\n    labels: [\"Week 1\", \"Week 2\", \"Week 3\", \"Week 4\"],\r\n    datasets: [\r\n        {\r\n          label: \"Awake\",\r\n          data: global_data[\"sleep\"][\"month\"][\"awake\"],//[0.2, 0.3, 0.1, 0.5],\r\n          maxBarThickness: 10\r\n        },\r\n        {\r\n          label: \"Light Sleep\",\r\n          data: global_data[\"sleep\"][\"month\"][\"light\"],//[2.2, 2.4, 2.1, 2.5],\r\n          maxBarThickness: 10\r\n        },\r\n        {\r\n          label: \"Deep Sleep\",\r\n          data: global_data[\"sleep\"][\"month\"][\"deep\"],//[4.2, 4.7, 4.1, 4.5],\r\n          maxBarThickness: 10\r\n        },\r\n    ]\r\n    };\r\n}\r\n};\r\n\r\nlet chartExample3 = {\r\n    options: {\r\n        legend: {\r\n        display: true,\r\n        position: \"bottom\",\r\n        labels: {\r\n            usePointStyle: true,\r\n            padding: 20\r\n        }\r\n        },\r\n        tooltips: {\r\n            callbacks: {\r\n                label: function(item, data) {\r\n                    return data.labels[item.index].substring(0, data.labels[item.index].search('[(]')) + \": \" + data.datasets[item.datasetIndex].data[item.index];\r\n                }\r\n        }\r\n        },\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n    },\r\n\r\n    data1: canvas => {\r\n        return {\r\n        labels: [\"Very High (20-25)\", \"High (15-20)\", \"Moderate (10-15)\", \"Low (0-15)\"],\r\n        datasets: [\r\n            {\r\n            label: \"Stress count by score in the past month\",\r\n            data: global_data[\"stress_pie_score\"][\"week\"],//[1, 5, 4, 7],\r\n            backgroundColor: [\r\n                \"#A91E2A\",\r\n                '#ff4242',\r\n                '#002867',\r\n                '#DCDCDC'\r\n                ],\r\n            }\r\n        ],\r\n        }\r\n    },\r\n\r\n    data2: canvas => {\r\n        return {\r\n        labels: [\"Very High (20-25)\", \"High (15-20)\", \"Moderate (10-15)\", \"Low (0-15)\"],\r\n        datasets: [\r\n            {\r\n            label: \"Stress count by score in the past month\",\r\n            data: global_data[\"stress_pie_score\"][\"month\"],//[3, 25, 61, 15],\r\n            backgroundColor: [\r\n                \"#A91E2A\",\r\n                '#ff4242',\r\n                '#002867',\r\n                '#DCDCDC'\r\n                ],\r\n            }\r\n        ],\r\n        innerWidth: 100,\r\n        }\r\n    }\r\n}\r\n\r\nlet chartExample4 = {\r\n  options: {\r\n    legend: {\r\n    display: true,\r\n    position: \"bottom\",\r\n    labels: {\r\n        usePointStyle: true,\r\n        padding: 20\r\n    }\r\n    },\r\n    tooltips: {\r\n        callbacks: {\r\n            label: function(item, data) {\r\n                return data.labels[item.index] + \": \" + data.datasets[item.datasetIndex].data[item.index];\r\n            }\r\n    }\r\n    },\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n  },\r\n\r\n  data1: canvas => {\r\n      return {\r\n      labels: [\"Work (Admin)\", \"Work (Field)\" , \"Social\", \"Family\", \"Financial\"],\r\n      datasets: [\r\n          {\r\n          label: \"Stress count by category in the past month\",\r\n          data: global_data[\"stress_pie_type\"][\"week\"],//[2, 4, 1, 2, 3],\r\n          backgroundColor: [\r\n            \"#0dd406\",\r\n            '#A91E2A',\r\n            '#002867',\r\n            '#DCDCDC',\r\n            '#FEB300',\r\n            // \"#f79216\",\r\n            ],\r\n          }\r\n      ]\r\n      }\r\n  },\r\n\r\n  data2: canvas => {\r\n      return {\r\n      labels: [\"Work (Admin)\", \"Work (Field)\" , \"Social\", \"Family\", \"Financial\"],\r\n      datasets: [\r\n          {\r\n          label: \"Stress count by category in the past month\",\r\n          data: global_data[\"stress_pie_type\"][\"month\"],//[7, 13, 10, 5, 15],\r\n          backgroundColor: [\r\n            \"#0dd406\",\r\n            '#A91E2A',\r\n            '#002867',\r\n            '#DCDCDC',\r\n            '#FEB300',\r\n            // \"#f79216\",\r\n            ],\r\n          }\r\n      ]\r\n      }\r\n    }\r\n  }\r\n\r\nlet chartExample5 = {\r\n  options: {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            color: colors.gray[900],\r\n            zeroLineColor: colors.gray[900]\r\n          },\r\n          ticks: {\r\n            callback: function(value) {\r\n              return value;\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    tooltips: {\r\n      callbacks: {\r\n        label: function(item, data) {\r\n          var label = data.datasets[item.datasetIndex].label || \"\";\r\n          var yLabel = item.yLabel;\r\n          var content = \"\";\r\n\r\n          if (data.datasets.length > 1) {\r\n            content += label;\r\n          }\r\n\r\n          // content += '$' + yLabel + 'k';\r\n          content += yLabel;\r\n          return content;\r\n        }\r\n      }\r\n    }\r\n  },\r\n  data1: canvas => {//sleep score by week\r\n    return {\r\n      labels: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\r\n      datasets: [\r\n        {\r\n          label: \"Sleep by Week\",\r\n          data: global_data[\"sleep\"][\"week\"][\"total\"],//[6.6, 6.7, 7.5, 7.2, 7.9, 6.8, 6.9]\r\n        }\r\n      ]\r\n    };\r\n  },\r\n  data2: canvas => {//sleep score by month\r\n    return {\r\n      labels: [\"1st\", \"2nd\", \"4th\", \"6th\", \"8th\", \"10th\", \"12th\", \"14th\", \"16th\", \"18th\", \"20th\", \"22nd\", \"24th\", \"26th\", \"28th\", \"30th\"],\r\n      datasets: [\r\n        {\r\n          label: \"Sleep by Month\",\r\n          data: global_data[\"sleep\"][\"month\"][\"total\"],//[7.5, 6.9, 7.2, 8, 8.1, 6.1, 6.4, 6.9, 7, 8, 7.6, 7.7, 8.1, 6.9, 7.3, 7.5]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n};\r\n  \r\n  // Example 2 of Chart inside src/views/Index.js (Total orders - Card)\r\nlet chartExample6 = {\r\noptions: {\r\n    scales: {\r\n    yAxes: [\r\n        {\r\n        ticks: {\r\n            callback: function(value) {\r\n            if (!(value % 5)) {\r\n                //return '$' + value + 'k'\r\n                return value;\r\n            }\r\n            }\r\n        },\r\n        stacked: true,\r\n        }\r\n    ],\r\n    xAxes: [{\r\n      stacked: true,\r\n    }]\r\n    },\r\n    tooltips: {\r\n        callbacks: {\r\n            label: function(item, data) {\r\n            var label = data.datasets[item.datasetIndex].label || \"\";\r\n            var yLabel = item.yLabel;\r\n            var content = \"\";\r\n            if (data.datasets.length > 1) {\r\n                content += label;\r\n            }\r\n            content += \" \" + yLabel;\r\n            return content;\r\n            }\r\n    }\r\n    }\r\n},\r\ndata1: canvas => {\r\n    return {\r\n    labels: [\"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\", \"Sun\"],\r\n    datasets: [\r\n        {\r\n            label: \"Stress Management Activites Minutes\",\r\n            data: global_data[\"stress_management\"][\"week\"],//[13, 25, 41, 15, 35, 21, 28],\r\n        }\r\n    ]\r\n    };\r\n},\r\ndata2: canvas => {\r\n    return {  \r\n    labels: [\"Week 1\", \"Week 2\", \"Week 3\", \"Week 4\"],\r\n    datasets: [\r\n        {\r\n            label: \"Stress Management Activites Minutes\",\r\n            data: global_data[\"stress_management\"][\"month\"]//[13, 25, 21, 28],\r\n        }\r\n    ]\r\n    };\r\n}\r\n};\r\n\r\nlet chartExample7 = {\r\n    options: {\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                ticks: {\r\n                    callback: function(value) {\r\n                        return value;\r\n                    }\r\n                },\r\n                stacked: true,\r\n                }\r\n            ],\r\n            xAxes: [{\r\n              stacked: true,\r\n            }]\r\n        },\r\n        tooltips: {\r\n            callbacks: {\r\n                label: function(item, data) {\r\n                    return data.datasets[item.datasetIndex].data[item.index];\r\n                }\r\n            }\r\n        },\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n    },\r\n\r\n    data1: canvas => {\r\n        return {\r\n        labels: [\"Very High (20-25)\", \"High (15-20)\", \"Moderate (10-15)\", \"Low (0-10)\"],\r\n        datasets: [\r\n            {\r\n            label: \"Stress count by score in the past month\",\r\n            data: global_data[\"stress_bar_score\"][\"week\"],//[1, 5, 4, 7],\r\n            backgroundColor: [\r\n              \"#A91E2A\",\r\n              '#ff4242',\r\n              '#002867',\r\n              '#DCDCDC'\r\n              ],\r\n            }\r\n        ],\r\n        }\r\n    },\r\n\r\n    data2: canvas => {\r\n        return {\r\n        labels: [\"Very High (20-25)\", \"High (15-20)\", \"Moderate (10-15)\", \"Low (0-10)\"],\r\n        datasets: [\r\n            {\r\n            label: \"Stress count by score in the past month\",\r\n            data: global_data[\"stress_bar_score\"][\"month\"],//[3, 25, 61, 15],\r\n            backgroundColor: [\r\n              \"#A91E2A\",\r\n              '#ff4242',\r\n              '#002867',\r\n              '#DCDCDC'\r\n              ],\r\n            }\r\n        ],\r\n        innerWidth: 100,\r\n        }\r\n    }\r\n}\r\n\r\nlet chartExample8 = {\r\n  options: {\r\n    scales: {\r\n        yAxes: [\r\n            {\r\n            ticks: {\r\n                callback: function(value) {\r\n                if (!(value % 1)) {\r\n                    return value;\r\n                }\r\n                }\r\n            },\r\n            stacked: true,\r\n            }\r\n        ],\r\n        xAxes: [{\r\n          stacked: true,\r\n        }]\r\n        },\r\n    tooltips: {\r\n        callbacks: {\r\n            label: function(item, data) {\r\n                return data.datasets[item.datasetIndex].data[item.index];\r\n            }\r\n    }\r\n    },\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n  },\r\n\r\n  data1: canvas => {\r\n      return {\r\n      labels: [\"Work (Admin)\", \"Work (Field)\" , \"Social\", \"Family\", \"Financial\"],\r\n      datasets: [\r\n          {\r\n          label: \"Stress count by category in the past month\",\r\n          data: global_data[\"stress_bar_type\"][\"week\"],//[2, 4, 1, 2, 3],\r\n          backgroundColor: [\r\n            \"#0dd406\",\r\n            '#A91E2A',\r\n            '#002867',\r\n            '#FEB300',\r\n            '#DCDCDC',\r\n            ],\r\n          }\r\n      ]\r\n      }\r\n  },\r\n\r\n  data2: canvas => {\r\n      return {\r\n      labels: [\"Work (Admin)\", \"Work (Field)\" , \"Social\", \"Family\", \"Financial\"],\r\n      datasets: [\r\n          {\r\n          label: \"Stress count by category in the past month\",\r\n          data: global_data[\"stress_bar_type\"][\"month\"],//[7, 13, 10, 5, 15],\r\n          backgroundColor: [\r\n              \"#0dd406\",\r\n              '#A91E2A',\r\n              '#002867',\r\n              '#FEB300',\r\n              '#DCDCDC',\r\n              ],\r\n          }\r\n      ]\r\n      }\r\n    }\r\n  }\r\n\r\nlet activity_pie = {\r\n  options: {\r\n      legend: {\r\n      display: true,\r\n      position: \"bottom\",\r\n      labels: {\r\n          usePointStyle: true,\r\n          padding: 20\r\n      }\r\n      },\r\n      tooltips: {\r\n          callbacks: {\r\n              label: function(item, data) {\r\n                  return data.labels[item.index] + \": \" + data.datasets[item.datasetIndex].data[item.index];\r\n              }\r\n      }\r\n      },\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n  },\r\n\r\n  data1: canvas => {\r\n      return {\r\n      labels: [\"Running\", \"Walking\", \"Sitting\", \"Driving\"],\r\n      datasets: [\r\n          {\r\n          label: \"Breakdown by activity name in the past day\",\r\n          data: global_data[\"activity_pie\"][\"day\"],\r\n          backgroundColor: [\r\n              \"#A91E2A\",\r\n              '#ff4242',\r\n              '#002867',\r\n              '#DCDCDC'\r\n              ],\r\n          }\r\n      ],\r\n      }\r\n  },\r\n\r\n  data2: canvas => {\r\n      return {\r\n      labels: [\"Running\", \"Walking\", \"Sitting\", \"Driving\"],\r\n      datasets: [\r\n          {\r\n          label: \"Breakdown by activity name in the past week\",\r\n          data: global_data[\"activity_pie\"][\"week\"],\r\n          backgroundColor: [\r\n              \"#A91E2A\",\r\n              '#ff4242',\r\n              '#002867',\r\n              '#DCDCDC'\r\n              ],\r\n          }\r\n      ],\r\n      innerWidth: 100,\r\n      }\r\n  }\r\n}\r\n\r\nlet step_counts = {\r\n  options: {\r\n    scales: {\r\n    yAxes: [\r\n        {\r\n        ticks: {\r\n            callback: function(value) {\r\n            if (!(value % 5)) {\r\n                return value;\r\n            }\r\n            }\r\n        },\r\n        stacked: true,\r\n        }\r\n    ],\r\n    xAxes: [{\r\n      stacked: true,\r\n    }]\r\n    },\r\n    tooltips: {\r\n        callbacks: {\r\n            label: function(item, data) {\r\n            var label = data.datasets[item.datasetIndex].label || \"\";\r\n            var yLabel = item.yLabel;\r\n            var content = \"\";\r\n            if (data.datasets.length > 1) {\r\n                content += label;\r\n            }\r\n            content += \" \" + yLabel;\r\n            return content;\r\n            }\r\n    }\r\n    }\r\n  },\r\n  data1: canvas => {\r\n      return {\r\n      labels: [\"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\", \"Sun\"],\r\n      datasets: [\r\n          {\r\n              label: \"Step counts for the past week\",\r\n              data: global_data[\"step_counts\"][\"week\"],\r\n          }\r\n      ]\r\n      };\r\n  },\r\n  data2: canvas => {\r\n      return {  \r\n      labels: [\"Week 1\", \"Week 2\", \"Week 3\", \"Week 4\"],\r\n      datasets: [\r\n          {\r\n              label: \"Step counts for the past month\",\r\n              data: global_data[\"step_counts\"][\"month\"],\r\n          }\r\n      ]\r\n      };\r\n  }\r\n}\r\n  \r\n/* dummy class to do basically the same thing that the previous code was doing\r\n   but inside a class. This is to prevent premature running of the getChartData\r\n   function when this file is loaded by the browser.\r\n   \r\n   Problem: since the function was not in a component, it ran as soon as the file\r\n   loaded (when the website is loaded) and this makes it run when the credentials \r\n   needed to pull data from firstore are not yet available.\r\n\r\n   Solution: put the code in a dummy class so that it is only loaded when the parent\r\n   class loads (and when the data needed is available). Put the class in any of the top\r\n   level components and this is good to go\r\n*/\r\nclass ChartsData extends React.Component {\r\n  getChartData = async () => {\r\n    const uid = localStorage.getItem(\"uid\")\r\n  \r\n    var docRef = db.collection(\"users\").doc(uid).collection(\"charts\")\r\n    var doc = await docRef.get()\r\n  \r\n    doc.docs.map(doc => global_data[doc.id] = doc.data())\r\n  \r\n    global_data[\"stress_bar_score\"] = global_data[\"stress_pie_score\"]\r\n    global_data[\"stress_bar_type\"] = global_data[\"stress_pie_type\"]\r\n\r\n    this.props.fetchedChartsData()\r\n    this.props.addOveralls(global_data[\"overalls\"])\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.getChartData()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <></>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispathToProps = (dispatch) => {\r\n  return {\r\n    addOveralls: (data) => dispatch(addOveralls(data)),\r\n    fetchedChartsData: () => dispatch(fetchedChartsData())\r\n  }\r\n};\r\n\r\nexport default connect(\r\n null,\r\n mapDispathToProps\r\n)(ChartsData);\r\n\r\nexport {\r\n  chartExample1, \r\n  chartExample2, \r\n  chartExample3, \r\n  chartExample4, \r\n  chartExample5, \r\n  chartExample6, \r\n  chartExample7, \r\n  chartExample8,\r\n  step_counts,\r\n  activity_pie\r\n}","export const fetchedChartsData = () => {\r\n    return {\r\n        type: \"FETCHED_CHARTS_DATA\"\r\n    }\r\n}\r\n\r\nexport const addOveralls = (data) => {\r\n    return {\r\n        type:  \"ADD_OVERALLS\",\r\n        overalls: data\r\n    }\r\n}","import React, { Component } from 'react';\r\n// javascipt plugin for creating charts\r\nimport Chart from \"chart.js\";\r\n// react plugin used to create charts\r\nimport { Line, Bar, Pie } from \"react-chartjs-2\";\r\n// node.js library that concatenates classes (strings)\r\nimport classnames from \"classnames\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    NavItem,\r\n    NavLink,\r\n    Nav,\r\n    Row,\r\n    Col,\r\n    Spinner,\r\n  } from \"reactstrap\";\r\n\r\nimport {\r\n    chartOptions,\r\n    parseOptions,\r\n} from \"variables/charts.js\";\r\n\r\nimport {\r\n  chartExample1,\r\n  chartExample2,\r\n  chartExample3,\r\n  chartExample4,\r\n  activity_pie as chartExample5,\r\n  step_counts as chartExample6,\r\n} from \"variables/charts_data.js\"\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nclass Graphs extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        activeNav1: 1,\r\n        activeNav2: 1,\r\n        activeNav3: 1,\r\n        activeNav4: 1,\r\n        activeNav5: 1,\r\n        activeNav6: 1,\r\n        chartExample1Data: \"data1\",\r\n        chartExample2Data: \"data1\",\r\n        chartExample3Data: \"data1\",\r\n        chartExample4Data: \"data1\",\r\n        chartExample5Data: \"data1\",\r\n        chartExample6Data: \"data1\",\r\n      };\r\n      if (window.Chart) {\r\n        parseOptions(Chart, chartOptions());\r\n      }\r\n    }\r\n\r\n    toggleNavs = (e, row, col, data) => {\r\n      e.preventDefault();\r\n      if (row === 1) {\r\n        if (col === 1){ //stress\r\n          this.setState({\r\n            activeNav1: data\r\n          });\r\n          if (data === 1){\r\n            this.setState({\r\n              chartExample1Data: \"data1\"\r\n            });\r\n          }\r\n          else if (data === 2){\r\n            this.setState({\r\n              chartExample1Data: \"data2\"\r\n            });\r\n          }\r\n          else{\r\n            this.setState({\r\n              chartExample1Data: \"data3\"\r\n            });\r\n          }\r\n        }\r\n        else{ //sleep\r\n          this.setState({\r\n            activeNav2: data\r\n          });\r\n          if (data === 1){\r\n            this.setState({\r\n              chartExample2Data: \"data1\"\r\n            });\r\n          }\r\n          else {\r\n            this.setState({\r\n              chartExample2Data: \"data2\"\r\n            });\r\n          }\r\n        }\r\n      }\r\n      else if (row === 2){\r\n        if (col === 1){\r\n          this.setState({\r\n            activeNav5: data\r\n          });\r\n          if (data === 1){\r\n            this.setState({\r\n              chartExample5Data: \"data1\"\r\n            });\r\n          }\r\n          else {\r\n            this.setState({\r\n              chartExample5Data: \"data2\"\r\n            });\r\n          }\r\n        }\r\n        else {\r\n          this.setState({\r\n            activeNav6: data\r\n          });\r\n          if (data === 1){\r\n            this.setState({\r\n              chartExample6Data: \"data1\"\r\n            });\r\n          }\r\n          else {\r\n            this.setState({\r\n              chartExample6Data: \"data2\"\r\n            });\r\n          }\r\n        }\r\n      }\r\n      else if (row === 3){\r\n        if (col === 1){\r\n          this.setState({\r\n            activeNav3: data\r\n          });\r\n          if (data === 1){\r\n            this.setState({\r\n              chartExample3Data: \"data1\"\r\n            });\r\n          }\r\n          else {\r\n            this.setState({\r\n              chartExample3Data: \"data2\"\r\n            });\r\n          }\r\n        }\r\n        else {\r\n          this.setState({\r\n            activeNav4: data\r\n          });\r\n          if (data === 1){\r\n            this.setState({\r\n              chartExample4Data: \"data1\"\r\n            });\r\n          }\r\n          else {\r\n            this.setState({\r\n              chartExample4Data: \"data2\"\r\n            });\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <>\r\n          { !this.props.fetchedInitial &&\r\n            <div className=\"loading-spinner\">\r\n              <Spinner style={{width: '5rem', height: '5rem'}} color=\"primary\" size='lg'/>\r\n            </div>\r\n          }\r\n          <Row>\r\n              <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\r\n              <Card className=\"bg-gradient-default shadow\">\r\n                  <CardHeader className=\"bg-transparent\">\r\n                  <Row className=\"align-items-center\">\r\n                      <div className=\"col\">\r\n                      <h6 className=\"text-uppercase text-light ls-1 mb-1\">\r\n                          Overview\r\n                      </h6>\r\n                      <h2 className=\"text-white mb-0\">Stress Score</h2>\r\n                      </div>\r\n                      <div className=\"col\">\r\n                      <Nav className=\"justify-content-end\" pills>\r\n                          <NavItem>\r\n                          <NavLink\r\n                              className={classnames(\"py-2 px-3\", {\r\n                              active: this.state.activeNav1 === 1\r\n                              })}\r\n                              href=\"#pablo\"\r\n                              onClick={e => this.toggleNavs(e, 1, 1, 1)}\r\n                          >\r\n                              <span className=\"d-none d-md-block\">Day</span>\r\n                              <span className=\"d-md-none\">D</span>\r\n                          </NavLink>\r\n                          </NavItem>\r\n                          <NavItem>\r\n                          <NavLink\r\n                              className={classnames(\"py-2 px-3\", {\r\n                              active: this.state.activeNav1 === 2\r\n                              })}\r\n                              data-toggle=\"tab\"\r\n                              href=\"#pablo\"\r\n                              onClick={e => this.toggleNavs(e, 1, 1, 2)}\r\n                          >\r\n                              <span className=\"d-none d-md-block\">Week</span>\r\n                              <span className=\"d-md-none\">W</span>\r\n                          </NavLink>\r\n                          </NavItem>\r\n                          <NavItem>\r\n                          <NavLink\r\n                              className={classnames(\"py-2 px-3\", {\r\n                              active: this.state.activeNav1 === 3\r\n                              })}\r\n                              href=\"#pablo\"\r\n                              onClick={e => this.toggleNavs(e, 1, 1, 3)}\r\n                          >\r\n                              <span className=\"d-none d-md-block\">Month</span>\r\n                              <span className=\"d-md-none\">M</span>\r\n                          </NavLink>\r\n                          </NavItem>\r\n                      </Nav>\r\n                      </div>\r\n                  </Row>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                  {/* Chart */}\r\n                  <div className=\"chart\">\r\n                      <Line\r\n                      data={chartExample1[this.state.chartExample1Data]}\r\n                      options={chartExample1.options}\r\n                      getDatasetAtEvent={e => console.log(e)}\r\n                      />\r\n                  </div>\r\n                  </CardBody>\r\n              </Card>\r\n              </Col>\r\n              <Col xl=\"4\">\r\n              <Card className=\"shadow\">\r\n                  <CardHeader className=\"bg-transparent\">\r\n                  <Row className=\"align-items-center\">\r\n                      <div className=\"col\">\r\n                      <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\r\n                          Overview\r\n                      </h6>\r\n                      <h2 className=\"mb-0\">Sleep</h2>\r\n                      </div>\r\n                      <div>\r\n                      <Nav className=\"justify-content-end\" pills>\r\n                          <NavItem>\r\n                          <NavLink\r\n                              className={classnames(\"py-2 px-3\", {\r\n                              active: this.state.activeNav2 === 1\r\n                              })}\r\n                              href=\"#pablo\"\r\n                              onClick={e => this.toggleNavs(e, 1, 2, 1)}\r\n                              >\r\n                              <span className=\"d-none d-md-block\">Week</span>\r\n                              <span className=\"d-md-none\">W</span>\r\n                          </NavLink>\r\n                          </NavItem>\r\n                          <NavItem>\r\n                          <NavLink\r\n                              className={classnames(\"py-2 px-3\", {\r\n                              active: this.state.activeNav2 === 2\r\n                              })}\r\n                              href=\"#pablo\"\r\n                              onClick={e => this.toggleNavs(e, 1, 2, 2)}\r\n                              >\r\n                              <span className=\"d-none d-md-block\">Month</span>\r\n                              <span className=\"d-md-none\">M</span>\r\n                          </NavLink>\r\n                          </NavItem>\r\n                      </Nav>\r\n                      </div>\r\n                  </Row>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                  {/* Chart */}\r\n                  <div className=\"chart\">\r\n                      <Bar\r\n                      data={chartExample2[this.state.chartExample2Data]}\r\n                      options={chartExample2.options}\r\n                      getDatasetAtEvent={e => console.log(e)}\r\n                      />\r\n                  </div>\r\n                  </CardBody>\r\n              </Card>\r\n              </Col>\r\n          </Row>\r\n          {/*Second Row */}\r\n          <Row className=\"mt-5\">\r\n            <Col className=\"mb-5 mb-xl-0\" xl=\"6\">\r\n              <Card className=\"shadow\">\r\n              <CardHeader className=\"bg-transparent\">\r\n                  <Row className=\"align-items-center\">\r\n                    <div className=\"col\">\r\n                    <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\r\n                      Overview\r\n                    </h6>\r\n                    <h2 className=\"mb-0\">Activity Breakdown</h2>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                    <Nav className=\"justify-content-end\" pills>\r\n                        <NavItem>\r\n                        <NavLink\r\n                            className={classnames(\"py-2 px-3\", {\r\n                            active: this.state.activeNav5 === 1\r\n                            })}\r\n                            href=\"#pablo\"\r\n                            onClick={e => this.toggleNavs(e, 2, 1, 1)}\r\n                            // onClick={e => e.preventDefault()}\r\n                            >\r\n                            <span className=\"d-none d-md-block\">Day</span>\r\n                            <span className=\"d-md-none\">D</span>\r\n                        </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                        <NavLink\r\n                            className={classnames(\"py-2 px-3\", {\r\n                            active: this.state.activeNav5 === 2\r\n                            })}\r\n                            href=\"#pablo\"\r\n                            onClick={e => this.toggleNavs(e, 2, 1, 2)}\r\n                            // onClick={e => e.preventDefault()}\r\n                            >\r\n                            <span className=\"d-none d-md-block\">Week</span>\r\n                            <span className=\"d-md-none\">W</span>\r\n                        </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                    </div>\r\n                  </Row>\r\n              </CardHeader>\r\n              <CardBody>\r\n                {/* Chart */}\r\n                <div className=\"chart\">\r\n                    <Pie\r\n                    data={chartExample5[this.state.chartExample5Data]}\r\n                    options={chartExample5.options}\r\n                    getDatasetAtEvent={e => console.log(e)}\r\n                    />\r\n                </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n            <Col className=\"mb-5 mb-xl-0\" xl=\"6\">\r\n              <Card className=\"shadow\">\r\n              <CardHeader className=\"bg-transparent\">\r\n                  <Row className=\"align-items-center\">\r\n                    <div className=\"col\">\r\n                    <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\r\n                      Overview\r\n                    </h6>\r\n                    <h2 className=\"mb-0\">Step Counts</h2>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                    <Nav className=\"justify-content-end\" pills>\r\n                        <NavItem>\r\n                        <NavLink\r\n                            className={classnames(\"py-2 px-3\", {\r\n                            active: this.state.activeNav6 === 1\r\n                            })}\r\n                            href=\"#pablo\"\r\n                            onClick={e => this.toggleNavs(e, 2, 2, 1)}\r\n                            // onClick={e => e.preventDefault()}\r\n                            >\r\n                            <span className=\"d-none d-md-block\">Week</span>\r\n                            <span className=\"d-md-none\">W</span>\r\n                        </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                        <NavLink\r\n                            className={classnames(\"py-2 px-3\", {\r\n                            active: this.state.activeNav6 === 2\r\n                            })}\r\n                            href=\"#pablo\"\r\n                            onClick={e => this.toggleNavs(e, 2, 2, 2)}\r\n                            // onClick={e => e.preventDefault()}\r\n                            >\r\n                            <span className=\"d-none d-md-block\">Month</span>\r\n                            <span className=\"d-md-none\">M</span>\r\n                        </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                    </div>\r\n                  </Row>\r\n              </CardHeader>\r\n              <CardBody>\r\n                {/* Chart */}\r\n                <div className=\"chart\">\r\n                    <Bar\r\n                    data={chartExample6[this.state.chartExample6Data]}\r\n                    options={chartExample6.options}\r\n                    getDatasetAtEvent={e => console.log(e)}\r\n                    />\r\n                </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          {/*Third Row */}\r\n          <Row className=\"mt-5\">\r\n            <Col className=\"mb-5 mb-xl-0\" xl=\"6\">\r\n              <Card className=\"shadow\">\r\n              <CardHeader className=\"bg-transparent\">\r\n                  <Row className=\"align-items-center\">\r\n                    <div className=\"col\">\r\n                    <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\r\n                      Overview\r\n                    </h6>\r\n                    <h2 className=\"mb-0\">Stress Breakdown (by score)</h2>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                    <Nav className=\"justify-content-end\" pills>\r\n                        <NavItem>\r\n                        <NavLink\r\n                            className={classnames(\"py-2 px-3\", {\r\n                            active: this.state.activeNav3 === 1\r\n                            })}\r\n                            href=\"#pablo\"\r\n                            onClick={e => this.toggleNavs(e, 3, 1, 1)}\r\n                            // onClick={e => e.preventDefault()}\r\n                            >\r\n                            <span className=\"d-none d-md-block\">Week</span>\r\n                            <span className=\"d-md-none\">W</span>\r\n                        </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                        <NavLink\r\n                            className={classnames(\"py-2 px-3\", {\r\n                            active: this.state.activeNav3 === 2\r\n                            })}\r\n                            href=\"#pablo\"\r\n                            onClick={e => this.toggleNavs(e, 3, 1, 2)}\r\n                            // onClick={e => e.preventDefault()}\r\n                            >\r\n                            <span className=\"d-none d-md-block\">Month</span>\r\n                            <span className=\"d-md-none\">M</span>\r\n                        </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                    </div>\r\n                  </Row>\r\n              </CardHeader>\r\n              <CardBody>\r\n                {/* Chart */}\r\n                <div className=\"chart\">\r\n                    <Pie\r\n                    data={chartExample3[this.state.chartExample3Data]}\r\n                    options={chartExample3.options}\r\n                    getDatasetAtEvent={e => console.log(e)}\r\n                    />\r\n                </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n            <Col className=\"mb-5 mb-xl-0\" xl=\"6\">\r\n              <Card className=\"shadow\">\r\n              <CardHeader className=\"bg-transparent\">\r\n                  <Row className=\"align-items-center\">\r\n                    <div className=\"col\">\r\n                    <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\r\n                      Overview\r\n                    </h6>\r\n                    <h2 className=\"mb-0\">Stress Breakdown (by type)</h2>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                    <Nav className=\"justify-content-end\" pills>\r\n                        <NavItem>\r\n                        <NavLink\r\n                            className={classnames(\"py-2 px-3\", {\r\n                            active: this.state.activeNav4 === 1\r\n                            })}\r\n                            href=\"#pablo\"\r\n                            onClick={e => this.toggleNavs(e, 3, 2, 1)}\r\n                            // onClick={e => e.preventDefault()}\r\n                            >\r\n                            <span className=\"d-none d-md-block\">Week</span>\r\n                            <span className=\"d-md-none\">W</span>\r\n                        </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                        <NavLink\r\n                            className={classnames(\"py-2 px-3\", {\r\n                            active: this.state.activeNav4 === 2\r\n                            })}\r\n                            href=\"#pablo\"\r\n                            onClick={e => this.toggleNavs(e, 3, 2, 2)}\r\n                            // onClick={e => e.preventDefault()}\r\n                            >\r\n                            <span className=\"d-none d-md-block\">Month</span>\r\n                            <span className=\"d-md-none\">M</span>\r\n                        </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                    </div>\r\n                  </Row>\r\n              </CardHeader>\r\n              <CardBody>\r\n                {/* Chart */}\r\n                <div className=\"chart\">\r\n                    <Pie\r\n                    data={chartExample4[this.state.chartExample4Data]}\r\n                    options={chartExample4.options}\r\n                    getDatasetAtEvent={e => console.log(e)}\r\n                    />\r\n                </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    fetchedInitial: state.charts.fetchedChartsData,\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n)(Graphs)","import React from \"react\";\n\nimport {\n  Button,\n  Card,\n  CardHeader,\n  Table,\n  Container,\n  Row,\n  Col,\n  Input,\n  UncontrolledTooltip,\n} from \"reactstrap\";\n\nimport Header from \"components/Headers/Header.js\";\nimport Graphs from \"./graphs.js\"\n\nimport { connect } from 'react-redux';\nimport { addUserData } from 'lib/redux/actions/app';\n\nconst firebase = require(\"firebase/app\");\nrequire(\"firebase/firestore\");\n\nclass Index extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      stressIncidents: [],\n      dateSort: true,\n      stressSort: true,\n      showTextBox: Array(6).fill(false),\n    }\n  }\n\n  componentDidMount() {\n    const uid = localStorage.getItem(\"uid\")\n    let db = firebase.firestore();\n\n    //when writing code to update data (description data) from website, no need to update the component manually. the below code will make the component update\n    let docRef = db.collection(\"users\").doc(uid).collection(\"stress_incidents\").orderBy(\"index\")\n    docRef.onSnapshot((doc) => {\n      var data = doc.docs.map(d => d.data())\n      this.setState({\n        stressIncidents: data,\n      })\n    })\n\n    db.collection(\"users\").doc(uid).get()\n    .then((doc) => {\n      this.props.addUserData(doc.data())\n    })\n  }\n\n  onDateToggle(e){\n    e.preventDefault();\n    let sort = !this.state.dateSort;\n    this.setState({\n      dateSort: !this.state.dateSort,\n      stressIncidents: sort ?\n        this.state.stressIncidents.sort(function (a, b) {\n          a = a.date.split('/');\n          b = b.date.split('/');\n          return b[2] - a[2] || b[0] - a[0] || b[1] - a[1];\n        }) : this.state.stressIncidents.sort(function (a, b) {\n          a = a.date.split('/');\n          b = b.date.split('/');\n          return a[2] - b[2] || a[0] - b[0] || a[1] - b[1];\n        })\n    });\n  }\n\n  onStressToggle(e){\n    e.preventDefault();\n    let sort = !this.state.stressSort;\n    this.setState({\n      stressSort: !this.state.stressSort,\n      stressIncidents: sort ? \n        this.state.stressIncidents.sort((a,b) => b.stress_score - a.stress_score) : this.state.stressIncidents.sort((a,b) => a.stress_score - b.stress_score),\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Graphs />\n          <Row className=\"mt-5\">\n            <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h3 className=\"mb-0\">Recent High Stress Incidents</h3>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <Table className=\"align-items-center table-flush\" responsive>\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\"><Button>Reason</Button></th>\n                      <th scopr=\"col\"><Button onClick={e => this.onStressToggle(e)}>Stress Score</Button></th>\n                      <th scope=\"col\"><Button onClick={e => this.onDateToggle(e)}>Date</Button></th>\n                      <th scope=\"col\"><Button>Time</Button></th>\n                      <th scope=\"col\"><Button>Description</Button></th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state.stressIncidents.map(incident => \n                      <tr>\n                        <td key={String(incident.index)+String(incident.index)}>\n                          <Input \n                            type=\"select\" \n                            defaultValue={incident.reason}\n                            onChange={(e) => console.log(`stress reason changed to ${e.target.value}`)}\n                          >\n                            <option>Work</option>\n                            <option>Social</option>\n                            <option>Money</option>\n                            <option>Family</option>\n                            <option>Other</option>\n                          </Input>\n                        </td>\n                        <td>{incident.stress}</td>\n                        <td>{incident.date}</td>\n                        <td>{incident.time}</td>\n                        <td key={incident.index}>\n                          <Input type=\"textarea\"\n                            defaultValue={`${incident.description} on ${incident.date}`}\n                            id={'Box'+incident.index}\n                            plaintext={!this.state.showTextBox[incident.index]}\n                            onDoubleClick={(e) => {\n                              e.preventDefault();\n                              this.state.showTextBox[incident.index] = true; \n                              // this.forceUpdate();\n                              this.setState();\n                            }}\n                          />\n                          <UncontrolledTooltip delay={0} placement='right' trigger=\"hover focus\" target={'Box'+incident.index}>\n                            Double Click Me to Edit!\n                          </UncontrolledTooltip>                          \n                          {\n                            this.state.showTextBox[incident.index] && \n                            <Button\n                              color='default'\n                              size=\"sm\"\n                              onClick={(e) => {\n                                e.preventDefault();\n                                this.state.showTextBox[incident.index] = false;\n                                this.forceUpdate();\n                              //   this.setState(({showTextBox}) => ({\n                              //     showTextBox: [\n                              //       ...showTextBox.slice(0,incident.index),\n                              //       false,\n                              //       ...showTextBox.slice(incident.index + 1)\n                              //     ]\n                              // }));\n                              }}\n                            >Save</Button>\n                          }\n                        </td>\n                      </tr>\n                      )}\n                  </tbody>\n                </Table>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      addUserData: (userData) => dispatch(addUserData(userData)),\n  }\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Index);\n","export const addUID = (UID) => {\r\n    return {\r\n        type: \"ADD_UID\",\r\n        UID\r\n    }\r\n}\r\n\r\nexport const addUserData = (userData) => {\r\n    return {\r\n        type: \"ADD_USER_DATA\",\r\n        userData\r\n    }\r\n}","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport { Container, Row, Col } from \"reactstrap\";\r\n\r\nclass UserHeader extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\"\r\n          style={{\r\n            minHeight: \"600px\",\r\n            backgroundImage:\r\n              \"url(\" + require(\"assets/img/theme/profile_background.jpeg\") + \")\",\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center top\"\r\n          }}\r\n        >\r\n          {/* Mask */}\r\n          <span className=\"mask bg-gradient-default opacity-8\" />\r\n          {/* Header container */}\r\n          <Container className=\"d-flex align-items-center\" fluid>\r\n            <Row>\r\n              <Col lg=\"7\" md=\"10\">\r\n                <h1 className=\"display-2 text-white\">Hello John Doe</h1>\r\n                <p className=\"text-white mt-0 mb-5\">\r\n                  This is your profile page. You can see the progress you've\r\n                  made with your work and manage your projects or assigned tasks\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserHeader;\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Container,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\n// core components\r\nimport UserHeader from \"components/Headers/UserHeader.js\";\r\n\r\nclass Profile extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <UserHeader />\r\n        {/* Page content */}\r\n        <Container className=\"mt--7\" fluid>\r\n          <Row>\r\n            <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"4\">\r\n              <Card className=\"card-profile shadow\">\r\n                <Row className=\"justify-content-center\">\r\n                  <Col className=\"order-lg-2\" lg=\"3\">\r\n                    <div className=\"card-profile-image\">\r\n                      <a href=\"#pablo\" onClick={e => e.preventDefault()}>\r\n                        <img\r\n                          alt=\"...\"\r\n                          className=\"rounded-circle\"\r\n                          src={require(\"assets/img/theme/team-4-800x800.jpg\")}\r\n                        />\r\n                      </a>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <CardHeader className=\"text-center border-0 pt-8 pt-md-4 pb-0 pb-md-4\">\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    {/* <Button\r\n                      className=\"mr-4\"\r\n                      color=\"info\"\r\n                      href=\"#pablo\"\r\n                      onClick={e => e.preventDefault()}\r\n                      size=\"sm\"\r\n                    >\r\n                      Connect\r\n                    </Button>\r\n                    <Button\r\n                      className=\"float-right\"\r\n                      color=\"default\"\r\n                      href=\"#pablo\"\r\n                      onClick={e => e.preventDefault()}\r\n                      size=\"sm\"\r\n                    >\r\n                      Message\r\n                    </Button> */}\r\n                  </div>\r\n                </CardHeader>\r\n                <CardBody className=\"pt-0 pt-md-4\">\r\n                  <Row>\r\n                    <div className=\"col\">\r\n                      <div className=\"card-profile-stats d-flex justify-content-center mt-md-5\">\r\n                        {/* <div>\r\n                          <span className=\"heading\">22</span>\r\n                          <span className=\"description\">Friends</span>\r\n                        </div>\r\n                        <div>\r\n                          <span className=\"heading\">10</span>\r\n                          <span className=\"description\">Photos</span>\r\n                        </div>\r\n                        <div>\r\n                          <span className=\"heading\">89</span>\r\n                          <span className=\"description\">Comments</span>\r\n                        </div> */}\r\n                      </div>\r\n                    </div>\r\n                  </Row>\r\n                  <div className=\"text-center\">\r\n                    <h3>\r\n                      John Doe\r\n                      <span className=\"font-weight-light\">, 19</span>\r\n                    </h3>\r\n                    <div className=\"h5 font-weight-300\">\r\n                      <i className=\"ni location_pin mr-2\" />\r\n                      Los Angeles, United States\r\n                    </div>\r\n                    <div className=\"h5 mt-4\">\r\n                      <i className=\"ni business_briefcase-24 mr-2\" />\r\n                      Your Work Title\r\n                    </div>\r\n                    <div>\r\n                      <i className=\"ni education_hat mr-2\" />\r\n                      Place of Work\r\n                    </div>\r\n                    {/* <hr className=\"my-4\" />\r\n                    <p>\r\n                      Ryan — the name taken by Melbourne-raised, Brooklyn-based\r\n                      Nick Murphy — writes, performs and records all of his own\r\n                      music.\r\n                    </p>\r\n                    <a href=\"#pablo\" onClick={e => e.preventDefault()}>\r\n                      Show more\r\n                    </a> */}\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n            <Col className=\"order-xl-1\" xl=\"8\">\r\n              <Card className=\"bg-secondary shadow\">\r\n                <CardHeader className=\"bg-white border-0\">\r\n                  <Row className=\"align-items-center\">\r\n                    <Col xs=\"8\">\r\n                      <h3 className=\"mb-0\">My account</h3>\r\n                    </Col>\r\n                    <Col className=\"text-right\" xs=\"4\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        href=\"#pablo\"\r\n                        onClick={e => e.preventDefault()}\r\n                        size=\"sm\"\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <Form>\r\n                    <h6 className=\"heading-small text-muted mb-4\">\r\n                      User information\r\n                    </h6>\r\n                    <div className=\"pl-lg-4\">\r\n                      <Row>\r\n                        <Col lg=\"6\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-username\"\r\n                            >\r\n                              Username\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              id=\"input-username\"\r\n                              placeholder=\"Username\"\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-email\"\r\n                            >\r\n                              Email address\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              id=\"input-email\"\r\n                              placeholder=\"example@example.com\"\r\n                              type=\"email\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col lg=\"6\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-first-name\"\r\n                            >\r\n                              First name\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              id=\"input-first-name\"\r\n                              placeholder=\"First name\"\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-last-name\"\r\n                            >\r\n                              Last name\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              id=\"input-last-name\"\r\n                              placeholder=\"Last name\"\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                    <hr className=\"my-4\" />\r\n                    {/* Address */}\r\n                    <h6 className=\"heading-small text-muted mb-4\">\r\n                      Contact information\r\n                    </h6>\r\n                    <div className=\"pl-lg-4\">\r\n                      <Row>\r\n                        <Col md=\"12\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-address\"\r\n                            >\r\n                              Address\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              id=\"input-address\"\r\n                              placeholder=\"Home Address\"\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col lg=\"4\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-city\"\r\n                            >\r\n                              City\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              id=\"input-city\"\r\n                              placeholder=\"City\"\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-country\"\r\n                            >\r\n                              Country\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              id=\"input-country\"\r\n                              placeholder=\"Country\"\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-country\"\r\n                            >\r\n                              Postal code\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              id=\"input-postal-code\"\r\n                              placeholder=\"Postal code\"\r\n                              type=\"number\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                    <hr className=\"my-4\" />\r\n                    {/* Description */}\r\n                    <h6 className=\"heading-small text-muted mb-4\">About me</h6>\r\n                    <div className=\"pl-lg-4\">\r\n                      <FormGroup>\r\n                        <label>About Me</label>\r\n                        <Input\r\n                          className=\"form-control-alternative\"\r\n                          placeholder=\"A few words about you ...\"\r\n                          rows=\"4\"\r\n                          type=\"textarea\"\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Modal,\n  Alert,\n  Row,\n  Col\n} from \"reactstrap\";\n\nimport * as firebase from \"firebase/app\";\nimport Axios from \"axios\";\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      invalid_credentials: false,\n      account_created: false,\n      first_name: '',\n      last_name: '',\n      email: '',\n      password: '',\n      showSpinner: false,\n      email_already_in_use: false,\n    }\n\n    this.tryGoogleSignIn = this.tryGoogleSignIn.bind(this)\n    this.authListener = () => {return;};\n  }\n\n  componentDidMount() {\n    window.scrollTo(0,0);\n    this.authListener = firebase.auth().onAuthStateChanged(async (user) => {\n      await this.onAuthHandler(user);\n    });\n  }\n\n  onAuthHandler(user) {\n    if (user) {\n      // console.log(user)\n      localStorage.setItem(\"uid\", user.uid);\n      this.setState({\n        account_created: true,\n      });\n    }\n  }\n\n  tryCreateAccount(email, password, first_name, last_name) {\n    if( !email|| !password || !first_name || !last_name ) {\n      this.setState({\n        invalid_credentials: true\n      });\n    }\n\n    else {\n      this.setState({\n        showSpinner: true\n      });\n\n      firebase.auth().createUserWithEmailAndPassword(email, password)\n      .then(async (user) => {\n        const uid = user.user.uid;\n        \n        const response = await Axios.post('https://us-central1-veterans-affairs-78bd2.cloudfunctions.net/createNewAccountTemplate',\n          { uid: uid, firstName: this.state.first_name, lastName: this.state.last_name, email: this.state.email }\n        );\n\n        if (response.code === 200 || response.message === 'Success') {\n          localStorage.setItem('loggedIn', true);\n          console.log('User Created!');\n          this.setState({\n            invalid_credentials: false,\n            account_created: true,\n            showSpinner: false\n          });\n        }\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        if (error.code === \"auth/email-already-in-use\") {\n          this.setState({\n            email_already_in_use: true,\n            showSpinner: false\n          });\n        }\n\n        else {\n          this.setState({\n            invalid_credentials: true,\n            showSpinner: false,\n          });\n        }\n        console.error(`Error code: ${error.code}. Error message: ${error.message}`)\n      });\n    }\n  }\n\n  tryGoogleSignIn() {\n    var provider = new firebase.auth.GoogleAuthProvider();\n    \n    firebase.auth().signInWithPopup(provider)\n    .then(function(result) {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      var token = result.credential.accessToken;\n      // The signed-in user info.\n      var user = result.user;\n      // ...\n      console.log(\"token =\", token, \"user =\", user)\n    })\n    .catch(function(error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      // The email of the user's account used.\n      var email = error.email;\n      // The firebase.auth.AuthCredential type that was used.\n      var credential = error.credential;\n      // ...\n      console.log(\"Error with error code =\", errorCode, \"and error message =\", errorMessage)\n    });\n  }\n\n  tryFacebookSignIn() {\n    var provider = new firebase.auth.FacebookAuthProvider();\n\n    firebase.auth().signInWithPopup(provider)\n    .then(function(result) {\n      // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n      var token = result.credential.accessToken;\n      // The signed-in user info.\n      var user = result.user;\n      // ...\n      console.log(\"email =\", user.email, \"name =\", user.displayName)\n    })\n    .catch(function(error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      // The email of the user's account used.\n      var email = error.email;\n      // The firebase.auth.AuthCredential type that was used.\n      var credential = error.credential;\n      this.setState({\n        invalid_credentials: true,\n      })\n      console.log(\"Error with error code =\", errorCode, \"and error message =\", errorMessage)\n    });\n  }\n\n  tryLogInUser(email, password) {\n    this.setState({\n      showSpinner: true,\n    })\n\n    firebase.auth().signInWithEmailAndPassword(email, password)\n    .then(() => {\n      this.setState({ \n        invalid_credentials: false,\n        account_created: true,\n        email: '',\n        password: '',\n        showSpinner: false\n      });\n      localStorage.setItem('loggedIn', true);\n      localStorage.setItem('email', email);\n    })\n    .catch((error) => {\n      // Handle Errors here.\n      this.setState({ \n        invalid_credentials: true,\n        showSpinner: false,\n      });\n      console.error(`Error code: ${error.code}. Error message: ${error.message}`)\n    });\n  }\n\n  render() {\n    if (this.state.account_created) {\n      localStorage.setItem('loggedIn', true)\n      return <Redirect push to=\"/admin/index\" />\n    }\n\n    return (\n      <>\n        <Modal style={{opacity: \"0%\"}} isOpen={this.state.showSpinner} />\n        <Col lg=\"5\" md=\"8\">\n          <Card className=\"bg-secondary shadow border-0\">\n            <CardHeader className=\"bg-transparent pb-5\">\n              <div className=\"text-muted text-center mt-2 mb-4\">\n                <small>Sign up with</small>\n              </div>\n              <div className=\"text-center\">\n                <Button\n                  className=\"btn-neutral btn-icon mr-4\"\n                  color=\"default\"\n                  href=\"#pablo\"\n                  onClick={() => this.tryFacebookSignIn()}\n                >\n                  <span className=\"btn-inner--icon\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/icons/common/facebook.svg\")}\n                    />\n                  </span>\n                  <span className=\"btn-inner--text\">Facebook</span>\n                </Button>\n                <Button\n                  className=\"btn-neutral btn-icon\"\n                  color=\"default\"\n                  href=\"#pablo\"\n                  onClick={() => this.tryGoogleSignIn()}\n                >\n                  <span className=\"btn-inner--icon\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/icons/common/google.svg\")}\n                    />\n                  </span>\n                  <span className=\"btn-inner--text\">Google</span>\n                </Button>\n              </div>\n            </CardHeader>\n            <CardBody className=\"px-lg-5 py-lg-5\">\n              <div className=\"text-center text-muted mb-4\">\n                <small>Or sign up with credentials</small>\n              </div>\n              <div className=\"text-center text-muted mb-4\">\n                <small>To view the model website, <Button style={{boxShadow: \"none\"}} className=\"px-0\" onClick={() => this.tryLogInUser('model@model.com','123456789')}>click here</Button></small>\n              </div>\n              {\n                this.state.invalid_credentials && \n                <div className=\"text-center text-muted mb-4\">\n                  <Alert color=\"danger\">Please check your email and password and try again!</Alert>\n                </div>\n              }\n              {\n                this.state.email_already_in_use && \n                <div className=\"text-center text-muted mb-4\">\n                  <Alert color=\"danger\">This email is already in use. Please login instead!</Alert>\n                </div>\n              }\n              <Form role=\"form\">\n                <FormGroup>\n                  <InputGroup className=\"input-group-alternative mb-3\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-hat-3\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"First Name\" type=\"text\" value={this.state.first_name} onChange={(e) => this.setState({first_name: e.target.value})}/>\n                  </InputGroup>\n                </FormGroup>\n                <FormGroup>\n                  <InputGroup className=\"input-group-alternative mb-3\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-hat-3\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Last Name\" type=\"text\" value={this.state.last_name} onChange={(e) => this.setState({last_name: e.target.value})}/>\n                  </InputGroup>\n                </FormGroup>\n                <FormGroup>\n                  <InputGroup className=\"input-group-alternative mb-3\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-email-83\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Email\" type=\"email\" autoComplete=\"new-email\" value={this.state.email} onChange={(e) => this.setState({email: e.target.value})}/>\n                  </InputGroup>\n                </FormGroup>\n                <FormGroup>\n                  <InputGroup className=\"input-group-alternative\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-lock-circle-open\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Password\" type=\"password\" autoComplete=\"new-password\" value={this.state.password} onChange={(e) => this.setState({password: e.target.value})}/>\n                  </InputGroup>\n                </FormGroup>\n                {/* <div className=\"text-muted font-italic\">\n                  <small>\n                    password strength:{\" \"}\n                    <span className=\"text-success font-weight-700\">strong</span>\n                  </small>\n                </div> */}\n                {/* <Row className=\"my-4\">\n                  <Col xs=\"12\">\n                    <div className=\"custom-control custom-control-alternative custom-checkbox\">\n                      <input\n                        className=\"custom-control-input\"\n                        id=\"customCheckRegister\"\n                        type=\"checkbox\"\n                      />\n                      <label\n                        className=\"custom-control-label\"\n                        htmlFor=\"customCheckRegister\"\n                      >\n                        <span className=\"text-muted\">\n                          I agree with the{\" \"}\n                          <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                            Privacy Policy\n                          </a>\n                        </span>\n                      </label>\n                    </div>\n                  </Col>\n                </Row> */}\n                <div className=\"text-center\">\n                  <Button className=\"mt-4\" color=\"primary\" type=\"button\" onClick={() => {\n                    this.tryCreateAccount(this.state.email, this.state.password, this.state.first_name, this.state.last_name)}}\n                  >\n                    Create account\n                  </Button>\n                </div>\n              </Form>\n            </CardBody>\n          </Card>\n          <Row className=\"mt-3\">\n            <Col xs=\"6\" />\n            <Col className=\"text-right\" xs=\"6\">\n              <Link\n                className=\"text-light\"\n                to=\"/auth/login\"\n              >\n                <small>Login Instead</small>\n              </Link>\n            </Col>\n          </Row>\n        </Col>\n      </>\n    );\n  }\n}\n\nexport default Register;\n","import React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col,\n  Alert,\n  Modal,\n} from \"reactstrap\";\n\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      invalid_credentials: false,\n      loggedIn: false,\n      email: '',\n      password: '',\n      showSpinner: false,\n    }\n    this.authListener = () => {return;};\n  }\n\n  componentDidMount() {\n    window.scrollTo(0,0);\n    this.authListener = firebase.auth().onAuthStateChanged((user) => {\n      this.onAuthHandler(user);\n    });\n  }\n\n  onAuthHandler(user) {\n    if (user) {\n      // console.log(user)\n      localStorage.setItem(\"uid\", user.uid)\n      this.setState({\n        loggedIn: true,\n      })\n    }\n  }\n\n  tryLogInUser(email, password) {\n    \n    if (email === '' || password === '') {\n      this.setState({\n        invalid_credentials: true,\n      })\n    }\n    \n    else {\n      this.setState({\n        showSpinner: true,\n      })\n\n      firebase.auth().signInWithEmailAndPassword(email, password)\n      .then((user) => {\n        localStorage.setItem('uid', user.user.uid)\n        localStorage.setItem('loggedIn', true);\n        \n        this.setState({ \n          invalid_credentials: false,\n          loggedIn: true,\n          email: '',\n          password: '',\n          showSpinner: false\n        });\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        this.setState({ \n          invalid_credentials: true,\n          showSpinner: false,\n        });\n        console.error(`Error code: ${error.code}. Error message: ${error.message}`)\n      });\n    }\n  }\n\n  tryGoogleSignIn() {\n    var provider = new firebase.auth.GoogleAuthProvider();\n    \n    firebase.auth().signInWithPopup(provider)\n    .then((result) => {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      var token = result.credential.accessToken;\n      // The signed-in user info.\n      var user = result.user;\n      // ...\n      console.log(\"token =\", token, \"user =\", user)\n    })\n    .catch((error) => {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      // The email of the user's account used.\n      var email = error.email;\n      // The firebase.auth.AuthCredential type that was used.\n      var credential = error.credential;\n      // ...\n      console.log(\"Error with error code =\", errorCode, \"and error message =\", errorMessage)\n    });\n  }\n\n  tryFacebookSignIn() {\n    var provider = new firebase.auth.FacebookAuthProvider();\n\n    firebase.auth().signInWithPopup(provider)\n    .then((result) => {\n      // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n      var token = result.credential.accessToken;\n      // The signed-in user info.\n      var user = result.user;\n      // ...\n      console.log(\"email =\", user.email, \"name =\", user.displayName)\n    })\n    .catch((error) => {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      // The email of the user's account used.\n      var email = error.email;\n      // The firebase.auth.AuthCredential type that was used.\n      var credential = error.credential;\n      this.setState({\n        invalid_credentials: true,\n      })\n      console.log(\"Error with error code =\", errorCode, \"and error message =\", errorMessage)\n    });\n  }\n\n  render() {\n    if (this.state.loggedIn) {\n      localStorage.setItem('loggedIn', true);\n      return <Redirect push to=\"/admin/index\"/>\n    }\n\n    return (\n      <>\n        <Modal style={{opacity: \"0%\"}} isOpen={this.state.showSpinner} />\n        <Col lg=\"5\" md=\"7\">\n          <Card className=\"bg-secondary shadow border-0\">\n            <CardHeader className=\"bg-transparent pb-5\">\n              <div className=\"text-muted text-center mt-2 mb-3\">\n                <small>Sign in with</small>\n              </div>\n              <div className=\"btn-wrapper text-center\">\n                <Button\n                  className=\"btn-neutral btn-icon\"\n                  color=\"default\"\n                  href=\"#pablo\"\n                  onClick={() => this.tryFacebookSignIn()}\n                >\n                  <span className=\"btn-inner--icon\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/icons/common/facebook.svg\")}\n                    />\n                  </span>\n                  <span className=\"btn-inner--text\">Facebook</span>\n                </Button>\n                <Button\n                  className=\"btn-neutral btn-icon\"\n                  color=\"default\"\n                  href=\"#pablo\"\n                  onClick={() => this.tryGoogleSignIn()}\n                >\n                  <span className=\"btn-inner--icon\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/icons/common/google.svg\")}\n                    />\n                  </span>\n                  <span className=\"btn-inner--text\">Google</span>\n                </Button>\n              </div>\n            </CardHeader>\n            <CardBody className=\"px-lg-5 py-lg-5\">\n              <div className=\"text-center text-muted mb-4\">\n                <small>Or sign in with credentials</small>\n              </div>\n              <div className=\"text-center text-muted mb-4\">\n                <small>To view the model website, <Button style={{boxShadow: \"none\"}} className=\"px-0\" onClick={() => this.tryLogInUser('paramshah09@gmail.com','123456789')}>click here</Button></small>\n              </div>\n              {\n                this.state.invalid_credentials && \n                <div className=\"text-center text-muted mb-4\">\n                  <Alert color=\"danger\">Please check your email and password and try again!</Alert>\n                </div>\n              }\n              <Form role=\"form\">\n                <FormGroup className=\"mb-3\">\n                  <InputGroup className=\"input-group-alternative\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-email-83\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Email\" type=\"email\" value={this.state.email} onChange={e => this.setState({email: e.target.value})}/>\n                  </InputGroup>\n                </FormGroup>\n                <FormGroup>\n                  <InputGroup className=\"input-group-alternative\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-lock-circle-open\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Password\" type=\"password\" autoComplete=\"new-password\" value={this.state.password} onChange={e => this.setState({password: e.target.value})}/>\n                  </InputGroup>\n                </FormGroup>\n                <div className=\"custom-control custom-control-alternative custom-checkbox\">\n                  <input\n                    className=\"custom-control-input\"\n                    id=\" customCheckLogin\"\n                    type=\"checkbox\"\n                  />\n                  <label\n                    className=\"custom-control-label\"\n                    htmlFor=\" customCheckLogin\"\n                  >\n                    <span className=\"text-muted\">Remember me</span>\n                  </label>\n                </div>\n                <div className=\"text-center\">\n                  {/* <Link\n                  className=\"nav-link-icon\"\n                  to=\"/admin/index\"\n                  > */}\n                    <Button className=\"my-4\" color=\"primary\" onClick={() => this.tryLogInUser(this.state.email, this.state.password)}>\n                    Sign In</Button>\n                  {/* </Link> */}\n                </div>\n              </Form>\n            </CardBody>\n          </Card>\n          <Row className=\"mt-3\">\n            <Col xs=\"6\">\n              <a\n                className=\"text-light\"\n                href=\"#pablo\"\n                onClick={e => e.preventDefault()}\n              >\n                <small>Forgot password?</small>\n              </a>\n            </Col>\n            <Col className=\"text-right\" xs=\"6\">\n              <Link\n                className=\"text-light\"\n                to=\"/auth/register\"\n              >\n                <small>Create new account</small>\n              </Link>\n            </Col>\n          </Row>\n        </Col>\n      </>\n    );\n  }\n}\n\nexport default Login;\n","import React from 'react';\r\nimport Graphs from '../graphs.js';\r\nimport Chart from \"chart.js\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport classnames from \"classnames\";\r\n\r\nimport {\r\n    chartOptions,\r\n    parseOptions,\r\n} from \"variables/charts.js\";\r\n\r\nimport {\r\n    chartExample5 as chartExample1,\r\n    chartExample6 as chartExample2,\r\n    chartExample7 as chartExample3,\r\n    chartExample8 as chartExample4,\r\n} from \"variables/charts_data.js\"\r\n\r\nimport {\r\n    Row,\r\n    Col,\r\n    Container,\r\n    NavItem,\r\n    NavLink,\r\n    Nav,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    // Spinner\r\n} from 'reactstrap'\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nclass Charts extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        activeNav1: 1,\r\n        activeNav2: 1,\r\n        activeNav3: 1,\r\n        activeNav4: 1,\r\n        chartExample1Data: \"data1\",\r\n        chartExample2Data: \"data1\",\r\n        chartExample3Data: \"data1\",\r\n        chartExample4Data: \"data1\",\r\n      };\r\n      if (window.Chart) {\r\n        parseOptions(Chart, chartOptions());\r\n      }\r\n    }\r\n\r\n    toggleNavs = (e, row, col, data) => {\r\n      e.preventDefault();\r\n      if (row === 1) {\r\n        if (col === 1){ //stress\r\n          this.setState({\r\n            activeNav1: data\r\n          });\r\n          if (data === 1){\r\n            this.setState({\r\n              chartExample1Data: \"data1\"\r\n            });\r\n          }\r\n          else{\r\n            this.setState({\r\n              chartExample1Data: \"data2\"\r\n            });\r\n          }\r\n        }\r\n        else{ //sleep\r\n          this.setState({\r\n            activeNav2: data\r\n          });\r\n          if (data === 1){\r\n            this.setState({\r\n              chartExample2Data: \"data1\"\r\n            });\r\n          }\r\n          else {\r\n            this.setState({\r\n              chartExample2Data: \"data2\"\r\n            });\r\n          }\r\n        }\r\n      }\r\n      else{\r\n        if (col === 1){\r\n          this.setState({\r\n            activeNav3: data\r\n          });\r\n          if (data === 1){\r\n            this.setState({\r\n              chartExample3Data: \"data1\"\r\n            });\r\n          }\r\n          else {\r\n            this.setState({\r\n              chartExample3Data: \"data2\"\r\n            });\r\n          }\r\n        }\r\n        else {\r\n          this.setState({\r\n            activeNav4: data\r\n          });\r\n          if (data === 1){\r\n            this.setState({\r\n              chartExample4Data: \"data1\"\r\n            });\r\n          }\r\n          else {\r\n            this.setState({\r\n              chartExample4Data: \"data2\"\r\n            });\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    render() {\r\n      return(\r\n        <>\r\n        <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\"/>\r\n        <Container className=\"mt--7\" fluid>\r\n            <Row>\r\n                <Col className=\"mb-5 mb-xl-0\" xl=\"5\">\r\n                <Card className=\"shadow\">\r\n                    <CardHeader className=\"bg-transparent\">\r\n                    <Row className=\"align-items-center\">\r\n                        <div className=\"col\">\r\n                        <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\r\n                            Overview\r\n                        </h6>\r\n                        <h2 className=\"mb-0\">Stress Management</h2>\r\n                        </div>\r\n                        <div>\r\n                        <Nav className=\"justify-content-end\" pills>\r\n                            <NavItem>\r\n                            <NavLink\r\n                                className={classnames(\"py-2 px-3\", {\r\n                                active: this.state.activeNav2 === 1\r\n                                })}\r\n                                href=\"#pablo\"\r\n                                onClick={e => this.toggleNavs(e, 1, 2, 1)}\r\n                                >\r\n                                <span className=\"d-none d-md-block\">Week</span>\r\n                                <span className=\"d-md-none\">W</span>\r\n                            </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                            <NavLink\r\n                                className={classnames(\"py-2 px-3\", {\r\n                                active: this.state.activeNav2 === 2\r\n                                })}\r\n                                href=\"#pablo\"\r\n                                onClick={e => this.toggleNavs(e, 1, 2, 2)}\r\n                                >\r\n                                <span className=\"d-none d-md-block\">Month</span>\r\n                                <span className=\"d-md-none\">M</span>\r\n                            </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        </div>\r\n                    </Row>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                    {/* Chart */}\r\n                    <div className=\"chart\">\r\n                        <Bar\r\n                        data={chartExample2[this.state.chartExample2Data]}\r\n                        options={chartExample2.options}\r\n                        getDatasetAtEvent={e => console.log(e)}\r\n                        />\r\n                    </div>\r\n                    </CardBody>\r\n                </Card>\r\n                </Col>\r\n                <Col className=\"mb-5 mb-xl-0\" xl=\"7\">\r\n                <Card className=\"bg-gradient-default shadow\">\r\n                    <CardHeader className=\"bg-transparent\">\r\n                    <Row className=\"align-items-center\">\r\n                        <div className=\"col\">\r\n                        <h6 className=\"text-uppercase text-light ls-1 mb-1\">\r\n                            Overview\r\n                        </h6>\r\n                        <h2 className=\"text-white mb-0\">Sleep</h2>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                        <Nav className=\"justify-content-end\" pills>\r\n                            <NavItem>\r\n                            <NavLink\r\n                                className={classnames(\"py-2 px-3\", {\r\n                                active: this.state.activeNav1 === 1\r\n                                })}\r\n                                data-toggle=\"tab\"\r\n                                href=\"#pablo\"\r\n                                onClick={e => this.toggleNavs(e, 1, 1, 1)}\r\n                            >\r\n                                <span className=\"d-none d-md-block\">Week</span>\r\n                                <span className=\"d-md-none\">W</span>\r\n                            </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                            <NavLink\r\n                                className={classnames(\"py-2 px-3\", {\r\n                                active: this.state.activeNav1 === 2\r\n                                })}\r\n                                href=\"#pablo\"\r\n                                onClick={e => this.toggleNavs(e, 1, 1, 2)}\r\n                            >\r\n                                <span className=\"d-none d-md-block\">Month</span>\r\n                                <span className=\"d-md-none\">M</span>\r\n                            </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        </div>\r\n                    </Row>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                    {/* Chart */}\r\n                    <div className=\"chart\">\r\n                        <Line\r\n                        data={chartExample1[this.state.chartExample1Data]}\r\n                        options={chartExample1.options}\r\n                        getDatasetAtEvent={e => console.log(e)}\r\n                        />\r\n                    </div>\r\n                    </CardBody>\r\n                </Card>\r\n                </Col>\r\n            </Row>\r\n            {/*Second Row */}\r\n            <Row className=\"mt-5\">\r\n            <Col className=\"mb-5 mb-xl-0\" xl=\"6\">\r\n                <Card className=\"shadow\">\r\n                <CardHeader className=\"bg-transparent\">\r\n                    <Row className=\"align-items-center\">\r\n                    <div className=\"col\">\r\n                    <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\r\n                        Overview\r\n                    </h6>\r\n                    <h2 className=\"mb-0\">Stress Breakdown (by score)</h2>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                    <Nav className=\"justify-content-end\" pills>\r\n                        <NavItem>\r\n                        <NavLink\r\n                            className={classnames(\"py-2 px-3\", {\r\n                            active: this.state.activeNav3 === 1\r\n                            })}\r\n                            href=\"#pablo\"\r\n                            onClick={e => this.toggleNavs(e, 2, 1, 1)}\r\n                            // onClick={e => e.preventDefault()}\r\n                            >\r\n                            <span className=\"d-none d-md-block\">Week</span>\r\n                            <span className=\"d-md-none\">W</span>\r\n                        </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                        <NavLink\r\n                            className={classnames(\"py-2 px-3\", {\r\n                            active: this.state.activeNav3 === 2\r\n                            })}\r\n                            href=\"#pablo\"\r\n                            onClick={e => this.toggleNavs(e, 2, 1, 2)}\r\n                            // onClick={e => e.preventDefault()}\r\n                            >\r\n                            <span className=\"d-none d-md-block\">Month</span>\r\n                            <span className=\"d-md-none\">M</span>\r\n                        </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                    </div>\r\n                    </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                {/* Chart */}\r\n                <div className=\"chart\">\r\n                    <Bar\r\n                    data={chartExample3[this.state.chartExample3Data]}\r\n                    options={chartExample3.options}\r\n                    getDatasetAtEvent={e => console.log(e)}\r\n                    />\r\n                </div>\r\n                </CardBody>\r\n                </Card>\r\n            </Col>\r\n            <Col className=\"mb-5 mb-xl-0\" xl=\"6\">\r\n                <Card className=\"shadow\">\r\n                <CardHeader className=\"bg-transparent\">\r\n                    <Row className=\"align-items-center\">\r\n                    <div className=\"col\">\r\n                    <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\r\n                        Overview\r\n                    </h6>\r\n                    <h2 className=\"mb-0\">Stress Breakdown (by type)</h2>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                    <Nav className=\"justify-content-end\" pills>\r\n                        <NavItem>\r\n                        <NavLink\r\n                            className={classnames(\"py-2 px-3\", {\r\n                            active: this.state.activeNav4 === 1\r\n                            })}\r\n                            href=\"#pablo\"\r\n                            onClick={e => this.toggleNavs(e, 2, 2, 1)}\r\n                            // onClick={e => e.preventDefault()}\r\n                            >\r\n                            <span className=\"d-none d-md-block\">Week</span>\r\n                            <span className=\"d-md-none\">W</span>\r\n                        </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                        <NavLink\r\n                            className={classnames(\"py-2 px-3\", {\r\n                            active: this.state.activeNav4 === 2\r\n                            })}\r\n                            href=\"#pablo\"\r\n                            onClick={e => this.toggleNavs(e, 2, 2, 2)}\r\n                            // onClick={e => e.preventDefault()}\r\n                            >\r\n                            <span className=\"d-none d-md-block\">Month</span>\r\n                            <span className=\"d-md-none\">M</span>\r\n                        </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                    </div>\r\n                    </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                {/* Chart */}\r\n                <div className=\"chart\">\r\n                    <Bar\r\n                    data={chartExample4[this.state.chartExample4Data]}\r\n                    options={chartExample4.options}\r\n                    getDatasetAtEvent={e => console.log(e)}\r\n                    />\r\n                </div>\r\n                </CardBody>\r\n                </Card>\r\n            </Col>\r\n            </Row>\r\n            \r\n        </Container>\r\n        <Container className=\"mt-5\" fluid>\r\n            <Graphs/>\r\n        </Container>\r\n        </>\r\n      )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    fetchedInitial: state.charts.fetchedChartsData,\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n)(Charts)","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport Index from \"views/Index.js\";\nimport Profile from \"views/examples/Profile.js\";\nimport Register from \"views/examples/Register.js\";\nimport Login from \"views/examples/Login.js\";\nimport Charts from \"views/examples/Charts_page.js\";\n// import Journal from \"views/examples/Journal/Journal.js\";\n\nvar routes = [\n  {\n    path: \"/index\",\n    name: \"Dashboard\",\n    icon: \"ni ni-tv-2 text-primary\",\n    component: Index,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/user-profile\",\n    name: \"User Profile\",\n    icon: \"ni ni-single-02 text-yellow\",\n    component: Profile,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/charts\",\n    name: \"Charts\",\n    icon: \"ni ni-bullet-list-67 text-red\",\n    component: Charts,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/login\",\n    name: \"Login\",\n    icon: \"ni ni-key-25 text-info\",\n    component: Login,\n    layout: \"/auth\"\n  },\n  {\n    path: \"/register\",\n    name: \"Register\",\n    icon: \"ni ni-circle-08 text-pink\",\n    component: Register,\n    layout: \"/auth\"\n  },\n  // {\n  //   path: \"/journal\",\n  //   name: \"Journal\",\n  //   icon: \"ni ni-circle-08 text-pink\",\n  //   component: Journal,\n  //   layout: \"/admin\"\n  // }\n];\nexport default routes;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container, Row, Col } from \"reactstrap\";\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\n// import App from '../App';\n\nimport routes from \"routes.js\";\n// import JournalIcon from \"views/examples/Journal/Journal_icon\";\nimport ChartsData from \"variables/charts_data\";\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: localStorage.getItem('loggedIn') === 'true'\n    }\n  }\n  componentDidUpdate(e) {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    this.refs.mainContent.scrollTop = 0;\n  }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  render() {\n    if (!this.state.isLoggedIn) {\n      return <Redirect to=\"/auth/login\" />\n    }\n    return (\n      <>\n        <Sidebar\n          {...this.props}\n          routes={routes}\n          logo={{\n            innerLink: \"/admin/index\",\n            imgSrc: require(\"assets/img/theme/warrior_wellness.png\"),\n            imgAlt: \"...\"\n          }}\n        />\n        <div className=\"main-content\" ref=\"mainContent\">\n          <AdminNavbar\n            {...this.props}\n            brandText={this.getBrandText(this.props.location.pathname)}\n          />\n          <Switch>\n            {this.getRoutes(routes)}\n            <Redirect from=\"*\" to=\"/admin/index\" />\n          </Switch>\n          <Container fluid>\n          <footer className=\"footer\">\n            <Row className=\"align-items-center justify-content-xl-between\">\n              <Col xl=\"6\">\n                <div className=\"copyright text-center text-xl-left text-muted\">\n                  {/* <a className=\"font-weight-bold ml-1\" /> */}\n                  <br />\n                </div>\n              </Col>\n            </Row>\n          </footer>\n          </Container>\n        </div>\n        {/* <App /> */}\n        {/* <JournalIcon/> */}\n        <ChartsData />\n      </>\n    );\n  }\n}\n\nexport default Admin;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\n// reactstrap components\nimport { Container, Row, Col } from \"reactstrap\";\n\n// core components\n// import AuthNavbar from \"components/Navbars/AuthNavbar.js\";\nimport routes from \"routes.js\";\n\nclass Auth extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      modalOpen: true,\n    }\n  }\n  componentDidMount() {\n    document.body.classList.add(\"bg-default\");\n  }\n  componentWillUnmount() {\n    document.body.classList.remove(\"bg-default\");\n  }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/auth\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"main-content\">\n          {/* <AuthNavbar /> */}\n          <div className=\"header bg-gradient-info py-7 py-lg-8\">\n            <Container>\n              <div className=\"header-body text-center mb-7\">\n                <Row className=\"justify-content-center\">\n                  <Col lg=\"5\" md=\"6\">\n                    <h1 className=\"text-white\">Welcome!</h1>\n                    <p className=\"text-lead text-light\">\n                      Login or create new account to view your dashboard!\n                    </p>\n                  </Col>\n                </Row>\n              </div>\n            </Container>\n            <div className=\"separator separator-bottom separator-skew zindex-100\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                preserveAspectRatio=\"none\"\n                version=\"1.1\"\n                viewBox=\"0 0 2560 100\"\n                x=\"0\"\n                y=\"0\"\n              >\n                <polygon\n                  className=\"fill-default\"\n                  points=\"2560 0 2560 100 0 100\"\n                />\n              </svg>\n            </div>\n          </div>\n          {/* Page content */}\n          <Container className=\"mt--8 pb-5\">\n            <Row className=\"justify-content-center\">\n              <Switch>\n                {this.getRoutes(routes)}\n                <Redirect from=\"*\" to=\"/auth/login\" />\n              </Switch>\n            </Row>\n          </Container>\n        </div>\n        <footer className=\"py-5\">\n          <Container>\n            <Row className=\"align-items-center justify-content-xl-between\" />\n          </Container>\n        </footer>\n      </>\n    );\n  }\n}\n\nexport default Auth;\n","const initialState = {\r\n    fetchedChartsData: false,\r\n    overalls: {},\r\n}\r\n\r\nconst chartsReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"FETCHED_CHARTS_DATA\":\r\n            return Object.assign({}, state, {\r\n                fetchedChartsData: true\r\n            })\r\n\r\n        case \"ADD_OVERALLS\":\r\n            return Object.assign({}, state, {\r\n                overalls: action.overalls\r\n            })\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default chartsReducer","const initialState = {\r\n    UID: \"\",\r\n    userData: {}\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_UID\":\r\n            localStorage.setItem('uid', action.UID)\r\n            return Object.assign({}, state, {\r\n                UID: action.UID\r\n            })\r\n\r\n        case \"ADD_USER_DATA\":\r\n            return Object.assign({}, state, {\r\n                userData: action.userData\r\n            })\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default appReducer","// import journalReducer from './journal'\r\nimport chartsReducer from './charts'\r\nimport appReducer from './app'\r\nimport {combineReducers} from 'redux'\r\n\r\nconst allReducers = combineReducers({\r\n    app: appReducer,\r\n    // journal: journalReducer,\r\n    charts: chartsReducer\r\n})\r\n\r\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, Switch, Redirect, HashRouter } from \"react-router-dom\";\n\nimport \"assets/plugins/nucleo/css/nucleo.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"assets/scss/argon-dashboard-react.scss\";\n\nimport AdminLayout from \"layouts/Admin.js\";\nimport AuthLayout from \"layouts/Auth.js\";\n\n//redux\nimport { createStore } from 'redux';\nimport allReducer from 'lib/redux/reducers'\nimport { Provider } from 'react-redux';\n\nconst store = createStore(\n    allReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\nexport default store;\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <Switch>\n        <Route path=\"/auth\" render={props => <AuthLayout {...props} />} />\n        <Route path=\"/admin\" render={props => <AdminLayout {...props}/>} />\n        <Redirect from=\"/\" to='/auth/login'/>\n      </Switch>\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nconst Chart = require(\"chart.js\");\n//\n// Chart extension for making the bars rounded\n// Code from: https://codepen.io/jedtrow/full/ygRYgo\n//\n\nChart.elements.Rectangle.prototype.draw = function() {\n  var ctx = this._chart.ctx;\n  var vm = this._view;\n  var left, right, top, bottom, signX, signY, borderSkipped, radius;\n  var borderWidth = vm.borderWidth;\n  // Set Radius Here\n  // If radius is large enough to cause drawing errors a max radius is imposed\n  var cornerRadius = 6;\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || \"bottom\";\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || \"left\";\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    var halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    var borderLeft = left + (borderSkipped !== \"left\" ? halfStroke * signX : 0);\n    var borderRight =\n      right + (borderSkipped !== \"right\" ? -halfStroke * signX : 0);\n    var borderTop = top + (borderSkipped !== \"top\" ? halfStroke * signY : 0);\n    var borderBottom =\n      bottom + (borderSkipped !== \"bottom\" ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  var corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  var borders = [\"bottom\", \"left\", \"top\", \"right\"];\n  var startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  var corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (var i = 1; i < 4; i++) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    // let nextCorner = cornerAt(nextCornerId);\n\n    let width = corners[2][0] - corners[1][0];\n    let height = corners[0][1] - corners[1][1];\n    let x = corners[1][0];\n    let y = corners[1][1];\n    // eslint-disable-next-line\n    var radius = cornerRadius;\n\n    // Fix radius being too large\n    if (radius > height / 2) {\n      radius = height / 2;\n    }\n    if (radius > width / 2) {\n      radius = width / 2;\n    }\n\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n};\n\nvar mode = \"light\"; //(themeMode) ? themeMode : 'light';\nvar fonts = {\n  base: \"Open Sans\"\n};\n\n// Colors\nvar colors = {\n  gray: {\n    100: \"#f6f9fc\",\n    200: \"#e9ecef\",\n    300: \"#dee2e6\",\n    400: \"#ced4da\",\n    500: \"#adb5bd\",\n    600: \"#8898aa\",\n    700: \"#525f7f\",\n    800: \"#32325d\",\n    900: \"#212529\"\n  },\n  theme: {\n    default: \"#172b4d\",\n    primary: \"#5e72e4\",\n    secondary: \"#f4f5f7\",\n    info: \"#11cdef\",\n    success: \"#2dce89\",\n    danger: \"#f5365c\",\n    warning: \"#fb6340\"\n  },\n  black: \"#12263F\",\n  white: \"#FFFFFF\",\n  transparent: \"transparent\"\n};\n\n// Methods\n\n// Chart.js global options\nfunction chartOptions() {\n  // Options\n  var options = {\n    defaults: {\n      global: {\n        responsive: true,\n        maintainAspectRatio: false,\n        defaultColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontFamily: fonts.base,\n        defaultFontSize: 13,\n        layout: {\n          padding: 0\n        },\n        legend: {\n          display: false,\n          position: \"bottom\",\n          labels: {\n            usePointStyle: true,\n            padding: 16\n          }\n        },\n        elements: {\n          point: {\n            radius: 0,\n            backgroundColor: colors.theme[\"primary\"]\n          },\n          line: {\n            tension: 0.4,\n            borderWidth: 4,\n            borderColor: colors.theme[\"primary\"],\n            backgroundColor: colors.transparent,\n            borderCapStyle: \"rounded\"\n          },\n          rectangle: {\n            backgroundColor: colors.theme[\"warning\"]\n          },\n          arc: {\n            backgroundColor: colors.theme[\"primary\"],\n            borderColor: mode === \"dark\" ? colors.gray[800] : colors.white,\n            borderWidth: 4\n          }\n        },\n        tooltips: {\n          enabled: true,\n          mode: \"index\",\n          intersect: false\n        }\n      },\n      doughnut: {\n        cutoutPercentage: 83,\n        legendCallback: function(chart) {\n          var data = chart.data;\n          var content = \"\";\n\n          data.labels.forEach(function(label, index) {\n            var bgColor = data.datasets[0].backgroundColor[index];\n\n            content += '<span class=\"chart-legend-item\">';\n            content +=\n              '<i class=\"chart-legend-indicator\" style=\"background-color: ' +\n              bgColor +\n              '\"></i>';\n            content += label;\n            content += \"</span>\";\n          });\n\n          return content;\n        }\n      }\n    }\n  };\n\n  // yAxes\n  Chart.scaleService.updateScaleDefaults(\"linear\", {\n    gridLines: {\n      borderDash: [2],\n      borderDashOffset: [2],\n      color: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      drawBorder: false,\n      drawTicks: false,\n      lineWidth: 0,\n      zeroLineWidth: 0,\n      zeroLineColor: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      zeroLineBorderDash: [2],\n      zeroLineBorderDashOffset: [2]\n    },\n    ticks: {\n      beginAtZero: true,\n      padding: 10,\n      callback: function(value) {\n        if (!(value % 10)) {\n          return value;\n        }\n      }\n    }\n  });\n\n  // xAxes\n  Chart.scaleService.updateScaleDefaults(\"category\", {\n    gridLines: {\n      drawBorder: false,\n      drawOnChartArea: false,\n      drawTicks: false\n    },\n    ticks: {\n      padding: 20\n    }\n  });\n\n  return options;\n}\n\n// Parse global options\nfunction parseOptions(parent, options) {\n  for (var item in options) {\n    if (typeof options[item] !== \"object\") {\n      parent[item] = options[item];\n    } else {\n      parseOptions(parent[item], options[item]);\n    }\n  }\n}\n\nmodule.exports = {\n  chartOptions, // used inside src/views/Index.js\n  parseOptions, // used inside src/views/Index.js\n};\n","module.exports = __webpack_public_path__ + \"static/media/team-4-800x800.942a8bda.jpg\";"],"sourceRoot":""}